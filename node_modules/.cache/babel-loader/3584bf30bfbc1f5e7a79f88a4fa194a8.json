{"ast":null,"code":"var _jsxFileName = \"/Users/robo/budget-app/src/containers/Dashboard/Dashboard.js\";\nimport React, { useState, useRef, useEffect } from \"react\";\nimport MonthSpendCard from '../../components/MonthSpendCard.js/MonthSpendCard';\nimport SpendInputRow from '../../components/SpendInputRow/SpendInputRow';\nimport FirebaseConfig from '../../firebase.config';\nimport firebase from 'firebase/app';\n\nrequire(\"firebase/database\"); // Initialize Firebase\n\n\nfirebase.initializeApp(FirebaseConfig);\n\nconst Dashboard = () => {\n  const inputRef = useRef();\n  const [budget, setBudget] = useState(0);\n  const [enteredMonth, setEnteredMonth] = useState(null);\n  const [enteredSpendRent, setEnteredSpendRent] = useState(null);\n  const [enteredSpendGroceries, setEnteredSpendGroceries] = useState(null);\n  const [enteredSpendTransport, setEnteredSpendTransport] = useState(null);\n  const [enteredSpendEntertainment, setEnteredSpendEntertainment] = useState(null);\n  const [savedMonthSpend, setSavedMonthSpend] = useState([{\n    category: {\n      entertainment: 100,\n      groceries: 200,\n      rent: 300,\n      transport: 400\n    },\n    month: \"April\"\n  }]); //Fetch data from DB \n\n  useEffect(() => {\n    firebase.database().ref('spend').orderByChild('/dateCreated').on('value', snapshot => {\n      let spend = [];\n      snapshot.forEach(spendSnapshot => {\n        spend.push(spendSnapshot.val());\n      });\n      setSavedMonthSpend(spend);\n    });\n  }, []); //Fetch data from DB \n\n  useEffect(() => {\n    \"Fetching firebase to GET budgets...\";\n    fetch(`https://budget-app-c0755.firebaseio.com/budgets.json`).then(reponse => reponse.json()).then(responseData => {\n      const budgetData = responseData;\n      setBudget(budgetData);\n    });\n  }, []); //Spend inputs\n\n  const spendInput = {\n    month: enteredMonth,\n    dateCreated: 0 - Date.now(),\n    category: {\n      rent: enteredSpendRent,\n      groceries: enteredSpendGroceries,\n      transport: enteredSpendTransport,\n      entertainment: enteredSpendEntertainment\n    }\n  };\n\n  const enteredSpendHandler = (input, cat) => {\n    switch (cat) {\n      case 'rent':\n        setEnteredSpendRent(input);\n        break;\n\n      case 'groceries':\n        setEnteredSpendGroceries(input);\n        break;\n\n      case 'transport':\n        setEnteredSpendTransport(input);\n        break;\n\n      case 'entertainment':\n        setEnteredSpendEntertainment(input);\n        break;\n\n      default:\n        console.error('ERROR: NO CATEGORIES MATCHED');\n    }\n  };\n\n  const dbObject = {\n    budgets: {\n      category: {\n        rent: {\n          name: \"Rent\",\n          percentage: 30,\n          monthly: 700,\n          annual: 1000,\n          category: \"Essential\"\n        },\n        groceries: {\n          name: \"Groceries\",\n          percentage: 8,\n          monthly: 150,\n          annual: 1000,\n          category: \"Essential\"\n        },\n        transport: {\n          name: \"Transport\",\n          percentage: 4,\n          monthly: 90,\n          annual: 1000,\n          category: \"Essential\"\n        },\n        entertainment: {\n          name: \"Entertainment\",\n          percentage: 12,\n          monthly: 310,\n          annual: 1000,\n          category: \"Luxury\"\n        }\n      }\n    }\n  }; // Call Firebase DB\n\n  const addSpendHandler = spend => {\n    console.log(\"Fetching firebase to POST...\");\n    fetch(`https://budget-app-c0755.firebaseio.com/spend.json`, {\n      method: 'POST',\n      body: JSON.stringify(spend),\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    }).then(response => {\n      return response.json();\n    }).then(responseData => {\n      setSavedMonthSpend(prevInput => [...prevInput]);\n    });\n  };\n\n  const months = savedMonthSpend.map(row => {\n    const data = row;\n    const id = \"010101\";\n    return /*#__PURE__*/React.createElement(MonthSpendCard, {\n      key: id,\n      spending: data,\n      month: data.month,\n      budget: budget,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 149,\n        columnNumber: 20\n      }\n    });\n  });\n  const inputRows = Object.keys(dbObject.budgets.category).map(catKey => {\n    return /*#__PURE__*/React.createElement(SpendInputRow, {\n      key: catKey,\n      cat: catKey,\n      enteredSpendHandler: enteredSpendHandler,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 158,\n        columnNumber: 16\n      }\n    });\n  });\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"bg-white px-8 flex h-20\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 168,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    className: \"font-bold text-2xl block my-auto\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 169,\n      columnNumber: 17\n    }\n  }, \"Monthly spending \", /*#__PURE__*/React.createElement(\"span\", {\n    className: \"text-3xl\",\n    role: \"img\",\n    \"aria-label\": \"Money emoji\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 169,\n      columnNumber: 83\n    }\n  }, \" \\uD83D\\uDCB8 \"), \" \")), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"max-w-7xl mx-8 my-4 px-8 py-4 border-gray-300 border rounded shadow\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 171,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"flex flex-col\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 172,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"table\", {\n    className: \"min-w-full max-w-full\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 173,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"thead\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 174,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(\"tr\", {\n    className: \"px-4 hover:bg-gray-100 transition-all ease-linear duration-200 cursor-pointer\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 176,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(\"td\", {\n    className: \"w-1/2 whitespace-no-wrap\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 177,\n      columnNumber: 33\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    className: \" my-4 appearance-none bg-transparent border-none w-full font-bold leading-tight focus:outline-none\",\n    type: \"text\",\n    placeholder: \"New month name\",\n    \"aria-label\": \"Month\",\n    ref: inputRef,\n    onChange: event => {\n      setEnteredMonth(event.target.value);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 178,\n      columnNumber: 37\n    }\n  })))), /*#__PURE__*/React.createElement(\"tbody\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 192,\n      columnNumber: 25\n    }\n  }, inputRows)), /*#__PURE__*/React.createElement(\"div\", {\n    className: \" my-4\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 197,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"button\", {\n    className: \"bg-blue-500 hover:bg-blue-700 text-white font-bold py-2 px-4 rounded\",\n    onClick: e => {\n      addSpendHandler(spendInput, e);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 198,\n      columnNumber: 25\n    }\n  }, \"Save\")))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"max-w-7xl mx-auto\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 206,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"flex flex-col\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 207,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"bg-white\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 208,\n      columnNumber: 21\n    }\n  }, months))));\n};\n\nexport default Dashboard;","map":{"version":3,"sources":["/Users/robo/budget-app/src/containers/Dashboard/Dashboard.js"],"names":["React","useState","useRef","useEffect","MonthSpendCard","SpendInputRow","FirebaseConfig","firebase","require","initializeApp","Dashboard","inputRef","budget","setBudget","enteredMonth","setEnteredMonth","enteredSpendRent","setEnteredSpendRent","enteredSpendGroceries","setEnteredSpendGroceries","enteredSpendTransport","setEnteredSpendTransport","enteredSpendEntertainment","setEnteredSpendEntertainment","savedMonthSpend","setSavedMonthSpend","category","entertainment","groceries","rent","transport","month","database","ref","orderByChild","on","snapshot","spend","forEach","spendSnapshot","push","val","fetch","then","reponse","json","responseData","budgetData","spendInput","dateCreated","Date","now","enteredSpendHandler","input","cat","console","error","dbObject","budgets","name","percentage","monthly","annual","addSpendHandler","log","method","body","JSON","stringify","headers","response","prevInput","months","map","row","data","id","inputRows","Object","keys","catKey","event","target","value","e"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,MAA1B,EAAkCC,SAAlC,QAAmD,OAAnD;AACA,OAAOC,cAAP,MAA2B,mDAA3B;AACA,OAAOC,aAAP,MAA0B,8CAA1B;AACA,OAAOC,cAAP,MAA2B,uBAA3B;AACA,OAAOC,QAAP,MAAqB,cAArB;;AACAC,OAAO,CAAC,mBAAD,CAAP,C,CAEA;;;AACAD,QAAQ,CAACE,aAAT,CAAuBH,cAAvB;;AAEA,MAAMI,SAAS,GAAG,MAAM;AACpB,QAAMC,QAAQ,GAAGT,MAAM,EAAvB;AACA,QAAM,CAACU,MAAD,EAASC,SAAT,IAAsBZ,QAAQ,CAAC,CAAD,CAApC;AACA,QAAM,CAACa,YAAD,EAAeC,eAAf,IAAkCd,QAAQ,CAAC,IAAD,CAAhD;AACA,QAAM,CAACe,gBAAD,EAAmBC,mBAAnB,IAA0ChB,QAAQ,CAAC,IAAD,CAAxD;AACA,QAAM,CAACiB,qBAAD,EAAwBC,wBAAxB,IAAoDlB,QAAQ,CAAC,IAAD,CAAlE;AACA,QAAM,CAACmB,qBAAD,EAAwBC,wBAAxB,IAAoDpB,QAAQ,CAAC,IAAD,CAAlE;AACA,QAAM,CAACqB,yBAAD,EAA4BC,4BAA5B,IAA4DtB,QAAQ,CAAC,IAAD,CAA1E;AACA,QAAM,CAACuB,eAAD,EAAkBC,kBAAlB,IAAwCxB,QAAQ,CAAC,CACnD;AACIyB,IAAAA,QAAQ,EAAE;AACNC,MAAAA,aAAa,EAAE,GADT;AAENC,MAAAA,SAAS,EAAE,GAFL;AAGNC,MAAAA,IAAI,EAAE,GAHA;AAINC,MAAAA,SAAS,EAAE;AAJL,KADd;AAOIC,IAAAA,KAAK,EAAE;AAPX,GADmD,CAAD,CAAtD,CARoB,CAqBpB;;AACA5B,EAAAA,SAAS,CAAC,MAAM;AACZI,IAAAA,QAAQ,CAACyB,QAAT,GAAoBC,GAApB,CAAwB,OAAxB,EAAiCC,YAAjC,CAA8C,cAA9C,EACKC,EADL,CACQ,OADR,EACiBC,QAAQ,IAAI;AACrB,UAAIC,KAAK,GAAG,EAAZ;AACAD,MAAAA,QAAQ,CAACE,OAAT,CAAkBC,aAAD,IAAmB;AAChCF,QAAAA,KAAK,CAACG,IAAN,CAAWD,aAAa,CAACE,GAAd,EAAX;AACH,OAFD;AAGAhB,MAAAA,kBAAkB,CAACY,KAAD,CAAlB;AACH,KAPL;AAQH,GATQ,EASN,EATM,CAAT,CAtBoB,CAmCpB;;AACAlC,EAAAA,SAAS,CAAC,MAAM;AACX,yCAAD;AACAuC,IAAAA,KAAK,CAAE,sDAAF,CAAL,CAA8DC,IAA9D,CAAmEC,OAAO,IAAIA,OAAO,CAACC,IAAR,EAA9E,EACEF,IADF,CACOG,YAAY,IAAI;AACnB,YAAMC,UAAU,GAAGD,YAAnB;AACAjC,MAAAA,SAAS,CAACkC,UAAD,CAAT;AACH,KAJD;AAKH,GAPQ,EAON,EAPM,CAAT,CApCoB,CA8CpB;;AACA,QAAMC,UAAU,GAAG;AACfjB,IAAAA,KAAK,EAAEjB,YADQ;AAEfmC,IAAAA,WAAW,EAAE,IAAIC,IAAI,CAACC,GAAL,EAFF;AAGfzB,IAAAA,QAAQ,EAAE;AACNG,MAAAA,IAAI,EAAEb,gBADA;AAENY,MAAAA,SAAS,EAAEV,qBAFL;AAGNY,MAAAA,SAAS,EAAEV,qBAHL;AAINO,MAAAA,aAAa,EAAEL;AAJT;AAHK,GAAnB;;AAYA,QAAM8B,mBAAmB,GAAG,CAACC,KAAD,EAAQC,GAAR,KAAgB;AACxC,YAAQA,GAAR;AACI,WAAK,MAAL;AACIrC,QAAAA,mBAAmB,CAACoC,KAAD,CAAnB;AACA;;AACJ,WAAK,WAAL;AACIlC,QAAAA,wBAAwB,CAACkC,KAAD,CAAxB;AACA;;AACJ,WAAK,WAAL;AACIhC,QAAAA,wBAAwB,CAACgC,KAAD,CAAxB;AACA;;AACJ,WAAK,eAAL;AACI9B,QAAAA,4BAA4B,CAAC8B,KAAD,CAA5B;AACA;;AACJ;AACIE,QAAAA,OAAO,CAACC,KAAR,CAAc,8BAAd;AAdR;AAgBH,GAjBD;;AAoBA,QAAMC,QAAQ,GAAG;AACbC,IAAAA,OAAO,EAAE;AACLhC,MAAAA,QAAQ,EAAE;AACNG,QAAAA,IAAI,EAAE;AACF8B,UAAAA,IAAI,EAAE,MADJ;AAEFC,UAAAA,UAAU,EAAE,EAFV;AAGFC,UAAAA,OAAO,EAAE,GAHP;AAIFC,UAAAA,MAAM,EAAE,IAJN;AAKFpC,UAAAA,QAAQ,EAAE;AALR,SADA;AAQNE,QAAAA,SAAS,EAAE;AACP+B,UAAAA,IAAI,EAAE,WADC;AAEPC,UAAAA,UAAU,EAAE,CAFL;AAGPC,UAAAA,OAAO,EAAE,GAHF;AAIPC,UAAAA,MAAM,EAAE,IAJD;AAKPpC,UAAAA,QAAQ,EAAE;AALH,SARL;AAeNI,QAAAA,SAAS,EAAE;AACP6B,UAAAA,IAAI,EAAE,WADC;AAEPC,UAAAA,UAAU,EAAE,CAFL;AAGPC,UAAAA,OAAO,EAAE,EAHF;AAIPC,UAAAA,MAAM,EAAE,IAJD;AAKPpC,UAAAA,QAAQ,EAAE;AALH,SAfL;AAsBNC,QAAAA,aAAa,EAAE;AACXgC,UAAAA,IAAI,EAAE,eADK;AAEXC,UAAAA,UAAU,EAAE,EAFD;AAGXC,UAAAA,OAAO,EAAE,GAHE;AAIXC,UAAAA,MAAM,EAAE,IAJG;AAKXpC,UAAAA,QAAQ,EAAE;AALC;AAtBT;AADL;AADI,GAAjB,CA/EoB,CAkHpB;;AAEA,QAAMqC,eAAe,GAAG1B,KAAK,IAAI;AAC7BkB,IAAAA,OAAO,CAACS,GAAR,CAAY,8BAAZ;AACAtB,IAAAA,KAAK,CAAE,oDAAF,EAAuD;AACxDuB,MAAAA,MAAM,EAAE,MADgD;AAExDC,MAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAe/B,KAAf,CAFkD;AAGxDgC,MAAAA,OAAO,EAAE;AAAE,wBAAgB;AAAlB;AAH+C,KAAvD,CAAL,CAKK1B,IALL,CAKU2B,QAAQ,IAAI;AACd,aAAOA,QAAQ,CAACzB,IAAT,EAAP;AACH,KAPL,EAQKF,IARL,CAQUG,YAAY,IAAI;AAClBrB,MAAAA,kBAAkB,CAAC8C,SAAS,IAAI,CAC5B,GAAGA,SADyB,CAAd,CAAlB;AAGH,KAZL;AAaH,GAfD;;AAiBA,QAAMC,MAAM,GACRhD,eAAe,CAACiD,GAAhB,CAAoBC,GAAG,IAAI;AACvB,UAAMC,IAAI,GAAGD,GAAb;AACA,UAAME,EAAE,GAAG,QAAX;AAEA,wBAAO,oBAAC,cAAD;AACH,MAAA,GAAG,EAAEA,EADF;AAEH,MAAA,QAAQ,EAAED,IAFP;AAGH,MAAA,KAAK,EAAEA,IAAI,CAAC5C,KAHT;AAIH,MAAA,MAAM,EAAEnB,MAJL;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAAP;AAMH,GAVD,CADJ;AAaA,QAAMiE,SAAS,GAAGC,MAAM,CAACC,IAAP,CAAYtB,QAAQ,CAACC,OAAT,CAAiBhC,QAA7B,EAAuC+C,GAAvC,CAA4CO,MAAD,IAAY;AACrE,wBAAO,oBAAC,aAAD;AACH,MAAA,GAAG,EAAEA,MADF;AAEH,MAAA,GAAG,EAAEA,MAFF;AAGH,MAAA,mBAAmB,EAAE5B,mBAHlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAAP;AAKH,GANiB,CAAlB;AASA,sBACI,uDACI;AAAK,IAAA,SAAS,EAAC,yBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAI,IAAA,SAAS,EAAC,kCAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uCAAkE;AAAM,IAAA,SAAS,EAAC,UAAhB;AAA2B,IAAA,IAAI,EAAC,KAAhC;AAAsC,kBAAW,aAAjD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBAAlE,MADJ,CADJ,eAII;AAAK,IAAA,SAAS,EAAC,qEAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAK,IAAA,SAAS,EAAC,eAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAO,IAAA,SAAS,EAAC,uBAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAEI;AAAI,IAAA,SAAS,EAAC,+EAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAI,IAAA,SAAS,EAAC,0BAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAO,IAAA,SAAS,EAAC,oGAAjB;AACI,IAAA,IAAI,EAAC,MADT;AAEI,IAAA,WAAW,EAAC,gBAFhB;AAGI,kBAAW,OAHf;AAII,IAAA,GAAG,EAAEzC,QAJT;AAKI,IAAA,QAAQ,EAAEsE,KAAK,IAAI;AACflE,MAAAA,eAAe,CAACkE,KAAK,CAACC,MAAN,CAAaC,KAAd,CAAf;AACH,KAPL;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,CADJ,CAFJ,CADJ,eAmBI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACKN,SADL,CAnBJ,CADJ,eAyBI;AAAK,IAAA,SAAS,EAAC,OAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AACI,IAAA,SAAS,EAAC,sEADd;AAEI,IAAA,OAAO,EAAEO,CAAC,IAAI;AACVrB,MAAAA,eAAe,CAACf,UAAD,EAAaoC,CAAb,CAAf;AACH,KAJL;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ,CAzBJ,CADJ,CAJJ,eAuCI;AAAK,IAAA,SAAS,EAAC,mBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAK,IAAA,SAAS,EAAC,eAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAK,IAAA,SAAS,EAAC,UAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAA2BZ,MAA3B,CADJ,CADJ,CAvCJ,CADJ;AA+CH,CA1MD;;AA4MA,eAAe9D,SAAf","sourcesContent":["import React, { useState, useRef, useEffect } from \"react\";\nimport MonthSpendCard from '../../components/MonthSpendCard.js/MonthSpendCard'\nimport SpendInputRow from '../../components/SpendInputRow/SpendInputRow'\nimport FirebaseConfig from '../../firebase.config'\nimport firebase from 'firebase/app';\nrequire(\"firebase/database\");\n\n// Initialize Firebase\nfirebase.initializeApp(FirebaseConfig);\n\nconst Dashboard = () => {\n    const inputRef = useRef();\n    const [budget, setBudget] = useState(0);\n    const [enteredMonth, setEnteredMonth] = useState(null);\n    const [enteredSpendRent, setEnteredSpendRent] = useState(null);\n    const [enteredSpendGroceries, setEnteredSpendGroceries] = useState(null);\n    const [enteredSpendTransport, setEnteredSpendTransport] = useState(null);\n    const [enteredSpendEntertainment, setEnteredSpendEntertainment] = useState(null);\n    const [savedMonthSpend, setSavedMonthSpend] = useState([\n        {\n            category: {\n                entertainment: 100,\n                groceries: 200,\n                rent: 300,\n                transport: 400\n            },\n            month: \"April\"\n\n        }]\n    );\n\n    //Fetch data from DB \n    useEffect(() => {\n        firebase.database().ref('spend').orderByChild('/dateCreated')\n            .on('value', snapshot => {\n                let spend = [];\n                snapshot.forEach((spendSnapshot) => {\n                    spend.push(spendSnapshot.val())\n                });\n                setSavedMonthSpend(spend)\n            });\n    }, []);\n\n\n\n    //Fetch data from DB \n    useEffect(() => {\n        (\"Fetching firebase to GET budgets...\")\n        fetch(`https://budget-app-c0755.firebaseio.com/budgets.json`).then(reponse => reponse.json()\n        ).then(responseData => {\n            const budgetData = responseData;\n            setBudget(budgetData)\n        })\n    }, []);\n\n\n    //Spend inputs\n    const spendInput = {\n        month: enteredMonth,\n        dateCreated: 0 - Date.now(),\n        category: {\n            rent: enteredSpendRent,\n            groceries: enteredSpendGroceries,\n            transport: enteredSpendTransport,\n            entertainment: enteredSpendEntertainment\n        }\n    };\n\n\n    const enteredSpendHandler = (input, cat) => {\n        switch (cat) {\n            case 'rent':\n                setEnteredSpendRent(input)\n                break;\n            case 'groceries':\n                setEnteredSpendGroceries(input)\n                break;\n            case 'transport':\n                setEnteredSpendTransport(input)\n                break;\n            case 'entertainment':\n                setEnteredSpendEntertainment(input)\n                break;\n            default:\n                console.error('ERROR: NO CATEGORIES MATCHED')\n        }\n    };\n\n\n    const dbObject = {\n        budgets: {\n            category: {\n                rent: {\n                    name: \"Rent\",\n                    percentage: 30,\n                    monthly: 700,\n                    annual: 1000,\n                    category: \"Essential\"\n                },\n                groceries: {\n                    name: \"Groceries\",\n                    percentage: 8,\n                    monthly: 150,\n                    annual: 1000,\n                    category: \"Essential\"\n                },\n                transport: {\n                    name: \"Transport\",\n                    percentage: 4,\n                    monthly: 90,\n                    annual: 1000,\n                    category: \"Essential\"\n                },\n                entertainment: {\n                    name: \"Entertainment\",\n                    percentage: 12,\n                    monthly: 310,\n                    annual: 1000,\n                    category: \"Luxury\"\n                }\n            },\n        },\n    };\n\n    // Call Firebase DB\n\n    const addSpendHandler = spend => {\n        console.log(\"Fetching firebase to POST...\")\n        fetch(`https://budget-app-c0755.firebaseio.com/spend.json`, {\n            method: 'POST',\n            body: JSON.stringify(spend),\n            headers: { 'Content-Type': 'application/json' }\n        })\n            .then(response => {\n                return response.json();\n            })\n            .then(responseData => {\n                setSavedMonthSpend(prevInput => [\n                    ...prevInput,\n                ]);\n            })\n    };\n\n    const months =\n        savedMonthSpend.map(row => {\n            const data = row\n            const id = \"010101\"\n\n            return <MonthSpendCard\n                key={id}\n                spending={data}\n                month={data.month}\n                budget={budget}\n            />;\n        })\n\n    const inputRows = Object.keys(dbObject.budgets.category).map((catKey) => {\n        return <SpendInputRow\n            key={catKey}\n            cat={catKey}\n            enteredSpendHandler={enteredSpendHandler}\n        />;\n    });\n\n\n    return (\n        <>\n            <div className=\"bg-white px-8 flex h-20\">\n                <h1 className=\"font-bold text-2xl block my-auto\">Monthly spending <span className=\"text-3xl\" role=\"img\" aria-label=\"Money emoji\"> &#128184; </span> </h1>\n            </div>\n            <div className=\"max-w-7xl mx-8 my-4 px-8 py-4 border-gray-300 border rounded shadow\">\n                <div className=\"flex flex-col\">\n                    <table className=\"min-w-full max-w-full\">\n                        <thead>\n\n                            <tr className=\"px-4 hover:bg-gray-100 transition-all ease-linear duration-200 cursor-pointer\" >\n                                <td className=\"w-1/2 whitespace-no-wrap\">\n                                    <input className=\" my-4 appearance-none bg-transparent border-none w-full font-bold leading-tight focus:outline-none\"\n                                        type=\"text\"\n                                        placeholder=\"New month name\"\n                                        aria-label=\"Month\"\n                                        ref={inputRef}\n                                        onChange={event => {\n                                            setEnteredMonth(event.target.value)\n                                        }}\n                                    >\n                                    </input>\n                                </td>\n                            </tr>\n                        </thead>\n\n                        <tbody >\n                            {inputRows}\n                        </tbody>\n\n                    </table>\n                    <div className=\" my-4\">\n                        <button\n                            className=\"bg-blue-500 hover:bg-blue-700 text-white font-bold py-2 px-4 rounded\"\n                            onClick={e => {\n                                addSpendHandler(spendInput, e)\n                            }}>Save</button>\n                    </div>\n                </div>\n            </div >\n            <div className=\"max-w-7xl mx-auto\">\n                <div className=\"flex flex-col\">\n                    <div className=\"bg-white\">{months}</div>\n                </div>\n            </div>\n        </>\n    );\n};\n\nexport default Dashboard;"]},"metadata":{},"sourceType":"module"}