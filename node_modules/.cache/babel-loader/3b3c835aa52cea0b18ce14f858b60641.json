{"ast":null,"code":"var _jsxFileName = \"/Users/robo/budget-app/src/containers/Planner/Planner.js\";\nimport React, { useState, useEffect, useRef } from \"react\";\nimport PlannerRow from \"../../components/PlannerRow/PlannerRow\";\n\nconst Planner = () => {\n  const inputRef = useRef();\n  const [enteredIncome, setEnteredIncome] = useState(0);\n  const [savedIncome, setSavedIncome] = useState(0);\n  const [monthlyRent, SetMonthlyRent] = useState(0);\n  const [annualRent, SetAnnualRent] = useState(0);\n  const [monthlyGroceries, SetMonthlyGroceries] = useState(0);\n  const [annualGroceries, SetAnnualGroceries] = useState(0);\n  const [monthlyTransport, SetMonthlyTransport] = useState(0);\n  const [annualTransport, SetAnnualTransport] = useState(0);\n  const [monthlyEntertainment, SetMonthlyEntertainment] = useState(0);\n  const [annualEntertainment, SetAnnualEntertainment] = useState(0); //Fetch budget data from DB and update states to update datatable\n\n  useEffect(() => {\n    console.log(\"Fetching firebase to GET budget...\");\n    fetch(`https://budget-app-c0755.firebaseio.com/budgets.json`).then(reponse => reponse.json()).then(responseData => {\n      SetMonthlyRent(responseData.rent.monthly);\n      SetAnnualRent(responseData.rent.annual);\n      SetMonthlyGroceries(responseData.groceries.monthly);\n      SetAnnualGroceries(responseData.groceries.annual);\n      SetMonthlyTransport(responseData.transport.monthly);\n      SetAnnualTransport(responseData.transport.annual);\n      SetMonthlyEntertainment(responseData.entertainment.monthly);\n      SetAnnualEntertainment(responseData.entertainment.annual);\n    });\n  }, []);\n  useEffect(() => {\n    console.log(\"Fetching firebase to GET income...\");\n    fetch(`https://budget-app-c0755.firebaseio.com/income.json`).then(reponse => reponse.json()).then(responseData => {\n      setSavedIncome(responseData);\n    });\n  }, []); // Initial values, fixed percentages and object structure for budgets. \n\n  const budgets = {\n    entertainment: {\n      name: \"Entertainment\",\n      percentage: 12,\n      monthly: monthlyEntertainment,\n      annual: annualEntertainment,\n      category: \"Luxury\"\n    },\n    groceries: {\n      name: \"Groceries\",\n      percentage: 8,\n      monthly: monthlyGroceries,\n      annual: annualGroceries,\n      category: \"Essential\"\n    },\n    rent: {\n      income: savedIncome,\n      name: \"Rent\",\n      percentage: 30,\n      monthly: monthlyRent,\n      annual: annualRent,\n      category: \"Essential\"\n    },\n    transport: {\n      name: \"Transport\",\n      percentage: 4,\n      monthly: monthlyTransport,\n      annual: annualTransport,\n      category: \"Savings\"\n    }\n  };\n\n  const incomeHandler = (income, budgets) => {\n    Object.keys(budgets).map(catKey => {\n      const newAnnual = Math.round(income / 100 * budgets[catKey].percentage);\n      const newMonthly = Math.round(newAnnual / 12);\n\n      switch (budgets[catKey].name) {\n        case 'Rent':\n          SetMonthlyRent(newMonthly);\n          SetAnnualRent(newAnnual);\n          break;\n\n        case 'Groceries':\n          SetMonthlyGroceries(newMonthly);\n          SetAnnualGroceries(newAnnual);\n          break;\n\n        case 'Transport':\n          SetMonthlyTransport(newMonthly);\n          SetAnnualTransport(newAnnual);\n          break;\n\n        case 'Entertainment':\n          SetMonthlyEntertainment(newMonthly);\n          SetAnnualEntertainment(newAnnual);\n          break;\n\n        default:\n          return console.error('Error');\n      }\n    });\n  }; // If input income changes, call incomeHandler  after a delay of 2000 m/s\n\n\n  useEffect(() => {\n    setTimeout(() => {\n      if (enteredIncome !== 0 || inputRef.current.value) {\n        incomeHandler(parseInt(inputRef.current ? inputRef.current.value : 0), budgets);\n      }\n\n      ;\n    }, 2000);\n  }, [enteredIncome, budgets]); // If user clicks SAVE, add budget to DB\n\n  const addBudgetHandler = budgets => {\n    console.log(\"Fetching firebase to POST...\");\n    fetch(`https://budget-app-c0755.firebaseio.com/budgets.json`, {\n      method: 'PUT',\n      body: JSON.stringify(budgets),\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    }).then(response => {\n      return response.json();\n    });\n  }; // If user clicks SAVE, add budget to DB (could be merged with addBudgetHandler to reduce DB calls?)\n\n\n  const addIncomeHandler = income => {\n    setTimeout(() => {\n      console.log(\"Fetching firebase to POST...\");\n      fetch(`https://budget-app-c0755.firebaseio.com/income.json`, {\n        method: 'PUT',\n        body: JSON.stringify(income),\n        headers: {\n          'Content-Type': 'application/json'\n        }\n      }).then(response => {\n        setSavedIncome(income);\n        return response.json();\n      });\n    }, 500);\n  }; // Display budget rows on page \n\n\n  const tableRows = Object.keys(budgets).map(catKey => {\n    return /*#__PURE__*/React.createElement(PlannerRow, {\n      key: catKey,\n      budget: budgets[catKey],\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 153,\n        columnNumber: 16\n      }\n    });\n  });\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"bg-white py-2 px-4 flex h-20 border-b border-gray-300\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 157,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    className: \"font-bold text-2xl block my-auto\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 158,\n      columnNumber: 17\n    }\n  }, \"Budget planner \", /*#__PURE__*/React.createElement(\"span\", {\n    className: \"text-3xl\",\n    role: \"img\",\n    \"aria-label\": \"Money emoji\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 158,\n      columnNumber: 81\n    }\n  }, \" \\uD83D\\uDCCA \"))), /*#__PURE__*/React.createElement(\"form\", {\n    className: \"w-full max-w-sm\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 161,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"flex items-center border-teal-500 py-2\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 162,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 163,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"p\", {\n    className: \"py-2 pl-4 pr-0 text-gray-700 font-bold text-3xl\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 164,\n      columnNumber: 25\n    }\n  }, \"\\xA3\")), /*#__PURE__*/React.createElement(\"input\", {\n    className: \"appearance-none bg-transparent border-none w-full text-gray-700 m-3 py-1 pl-0 leading-tight focus:outline-none text-3xl font-bold\",\n    type: \"text\",\n    placeholder: savedIncome.toString(),\n    \"aria-label\": \"Income\",\n    ref: inputRef,\n    onChange: event => {\n      setEnteredIncome(event.target.value);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 166,\n      columnNumber: 21\n    }\n  }))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"max-w-7xl mx-auto\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 181,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"flex flex-col\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 182,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"align-middle inline-block min-w-full  bg-gray-100 \",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 183,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"table\", {\n    className: \"min-w-full max-w-full mx-4 my-2 px-4 py-2 border shadow border-gray-200\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 184,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(\"thead\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 185,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(\"tr\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 186,\n      columnNumber: 33\n    }\n  }, /*#__PURE__*/React.createElement(\"th\", {\n    className: \"md:w-48 px-8 py-4 border-b border-gray-200 bg-gray-50 text-left text-sm leading-4 font-medium text-gray-500 uppercase tracking-wider\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 187,\n      columnNumber: 37\n    }\n  }, \"Category\"), /*#__PURE__*/React.createElement(\"th\", {\n    className: \"md:w-48 px-8 py-4 border-b border-gray-200 bg-gray-50 text-left text-sm leading-4 font-medium text-gray-500 uppercase tracking-wider\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 190,\n      columnNumber: 37\n    }\n  }, \"Percentage\"), /*#__PURE__*/React.createElement(\"th\", {\n    className: \"md:w-48 px-8 py-4 border-b border-gray-200 bg-gray-50 text-left text-sm leading-4 font-medium text-gray-500 uppercase tracking-wider\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 193,\n      columnNumber: 37\n    }\n  }, \"Monthly\"), /*#__PURE__*/React.createElement(\"th\", {\n    className: \"md:w-48 px-8 py-4 border-b border-gray-200 bg-gray-50 text-left text-sm leading-4 font-medium text-gray-500 uppercase tracking-wider\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 196,\n      columnNumber: 37\n    }\n  }, \"Annually\"), /*#__PURE__*/React.createElement(\"th\", {\n    className: \"md:w-48 px-8 py-4 border-b border-gray-200 bg-gray-50 text-left text-sm leading-4 font-medium text-gray-500 uppercase tracking-wider\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 199,\n      columnNumber: 37\n    }\n  }, \"Category\"))), /*#__PURE__*/React.createElement(\"tbody\", {\n    className: \"bg-white align-middle\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 204,\n      columnNumber: 29\n    }\n  }, tableRows)), /*#__PURE__*/React.createElement(\"button\", {\n    className: \"bg-blue-500 hover:bg-blue-700 text-white font-bold py-2 px-4 m-4 rounded\",\n    onClick: e => {\n      addIncomeHandler(enteredIncome, e);\n      addBudgetHandler(budgets);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 206,\n      columnNumber: 25\n    }\n  }, \"Save as budget\")))));\n};\n\nexport default Planner;","map":{"version":3,"sources":["/Users/robo/budget-app/src/containers/Planner/Planner.js"],"names":["React","useState","useEffect","useRef","PlannerRow","Planner","inputRef","enteredIncome","setEnteredIncome","savedIncome","setSavedIncome","monthlyRent","SetMonthlyRent","annualRent","SetAnnualRent","monthlyGroceries","SetMonthlyGroceries","annualGroceries","SetAnnualGroceries","monthlyTransport","SetMonthlyTransport","annualTransport","SetAnnualTransport","monthlyEntertainment","SetMonthlyEntertainment","annualEntertainment","SetAnnualEntertainment","console","log","fetch","then","reponse","json","responseData","rent","monthly","annual","groceries","transport","entertainment","budgets","name","percentage","category","income","incomeHandler","Object","keys","map","catKey","newAnnual","Math","round","newMonthly","error","setTimeout","current","value","parseInt","addBudgetHandler","method","body","JSON","stringify","headers","response","addIncomeHandler","tableRows","toString","event","target","e"],"mappings":"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","sourcesContent":["import React, { useState, useEffect, useRef } from \"react\";\nimport PlannerRow from \"../../components/PlannerRow/PlannerRow\";\n\n\nconst Planner = () => {\n\n    const inputRef = useRef();\n    const [enteredIncome, setEnteredIncome] = useState(0);\n    const [savedIncome, setSavedIncome] = useState(0);\n    const [monthlyRent, SetMonthlyRent] = useState(0);\n    const [annualRent, SetAnnualRent] = useState(0);\n    const [monthlyGroceries, SetMonthlyGroceries] = useState(0);\n    const [annualGroceries, SetAnnualGroceries] = useState(0);\n    const [monthlyTransport, SetMonthlyTransport] = useState(0);\n    const [annualTransport, SetAnnualTransport] = useState(0);\n    const [monthlyEntertainment, SetMonthlyEntertainment] = useState(0);\n    const [annualEntertainment, SetAnnualEntertainment] = useState(0);\n\n    //Fetch budget data from DB and update states to update datatable\n    useEffect(() => {\n        console.log(\"Fetching firebase to GET budget...\")\n        fetch(`https://budget-app-c0755.firebaseio.com/budgets.json`).then(reponse => reponse.json()\n        ).then(responseData => {\n            SetMonthlyRent(responseData.rent.monthly)\n            SetAnnualRent(responseData.rent.annual)\n            SetMonthlyGroceries(responseData.groceries.monthly)\n            SetAnnualGroceries(responseData.groceries.annual)\n            SetMonthlyTransport(responseData.transport.monthly)\n            SetAnnualTransport(responseData.transport.annual)\n            SetMonthlyEntertainment(responseData.entertainment.monthly)\n            SetAnnualEntertainment(responseData.entertainment.annual)\n        })\n    }, []);\n\n    useEffect(() => {\n        console.log(\"Fetching firebase to GET income...\")\n        fetch(`https://budget-app-c0755.firebaseio.com/income.json`).then(reponse => reponse.json()\n        ).then(responseData => {\n            setSavedIncome(responseData)\n        })\n    }, []);\n\n    // Initial values, fixed percentages and object structure for budgets. \n\n    const budgets = {\n        entertainment: {\n            name: \"Entertainment\",\n            percentage: 12,\n            monthly: monthlyEntertainment,\n            annual: annualEntertainment,\n            category: \"Luxury\"\n        },\n\n        groceries: {\n            name: \"Groceries\",\n            percentage: 8,\n            monthly: monthlyGroceries,\n            annual: annualGroceries,\n            category: \"Essential\"\n        },\n\n        rent: {\n            income: savedIncome,\n            name: \"Rent\",\n            percentage: 30,\n            monthly: monthlyRent,\n            annual: annualRent,\n            category: \"Essential\"\n        },\n        transport: {\n            name: \"Transport\",\n            percentage: 4,\n            monthly: monthlyTransport,\n            annual: annualTransport,\n            category: \"Savings\"\n        },\n    };\n\n    const incomeHandler = (income, budgets) => {\n        Object.keys(budgets).map((catKey) => {\n            const newAnnual = Math.round((income / 100 * budgets[catKey].percentage));\n            const newMonthly = Math.round(newAnnual / 12);\n\n            switch (budgets[catKey].name) {\n                case 'Rent':\n                    SetMonthlyRent(newMonthly)\n                    SetAnnualRent(newAnnual)\n                    break;\n\n                case 'Groceries':\n                    SetMonthlyGroceries(newMonthly)\n                    SetAnnualGroceries(newAnnual)\n                    break;\n\n                case 'Transport':\n                    SetMonthlyTransport(newMonthly)\n                    SetAnnualTransport(newAnnual)\n                    break;\n\n                case 'Entertainment':\n                    SetMonthlyEntertainment(newMonthly)\n                    SetAnnualEntertainment(newAnnual)\n                    break;\n\n                default:\n                    return (console.error('Error'))\n            }\n        })\n    };\n\n    // If input income changes, call incomeHandler  after a delay of 2000 m/s\n    useEffect(() => {\n        setTimeout(() => {\n            if (enteredIncome !== 0 || inputRef.current.value) {\n                incomeHandler(parseInt(inputRef.current ? inputRef.current.value : 0), budgets)\n            };\n        }, 2000);\n    }, [enteredIncome, budgets]);\n\n\n    // If user clicks SAVE, add budget to DB\n    const addBudgetHandler = budgets => {\n        console.log(\"Fetching firebase to POST...\")\n        fetch(`https://budget-app-c0755.firebaseio.com/budgets.json`, {\n            method: 'PUT',\n            body: JSON.stringify(budgets),\n            headers: { 'Content-Type': 'application/json' }\n        })\n            .then(response => {\n                return response.json()\n            })\n    };\n\n    // If user clicks SAVE, add budget to DB (could be merged with addBudgetHandler to reduce DB calls?)\n    const addIncomeHandler = income => {\n        setTimeout(() => {\n            console.log(\"Fetching firebase to POST...\")\n            fetch(`https://budget-app-c0755.firebaseio.com/income.json`, {\n                method: 'PUT',\n                body: JSON.stringify(income),\n                headers: { 'Content-Type': 'application/json' }\n            })\n                .then(response => {\n                    setSavedIncome(income)\n                    return response.json()\n                })\n        }, 500);\n    };\n\n    // Display budget rows on page \n\n    const tableRows = Object.keys(budgets).map((catKey) => {\n        return <PlannerRow key={catKey} budget={budgets[catKey]} />;\n    });\n    return (\n        <>\n            <div className=\"bg-white py-2 px-4 flex h-20 border-b border-gray-300\">\n                <h1 className=\"font-bold text-2xl block my-auto\">Budget planner <span className=\"text-3xl\" role=\"img\" aria-label=\"Money emoji\"> &#128202; </span></h1>\n            </div>\n\n            <form className=\"w-full max-w-sm\" >\n                <div className=\"flex items-center border-teal-500 py-2\">\n                    <div>\n                        <p className=\"py-2 pl-4 pr-0 text-gray-700 font-bold text-3xl\">£</p>\n                    </div>\n                    <input className=\"appearance-none bg-transparent border-none w-full text-gray-700 m-3 py-1 pl-0 leading-tight focus:outline-none text-3xl font-bold\"\n                        type=\"text\"\n                        placeholder={savedIncome.toString()}\n                        aria-label=\"Income\"\n                        ref={inputRef}\n                        onChange={event => {\n                            setEnteredIncome(event.target.value)\n                        }}\n                    >\n                    </input>\n                </div>\n            </form>\n\n\n\n            <div className=\"max-w-7xl mx-auto\">\n                <div className=\"flex flex-col\">\n                    <div className=\"align-middle inline-block min-w-full  bg-gray-100 \">\n                        <table className=\"min-w-full max-w-full mx-4 my-2 px-4 py-2 border shadow border-gray-200\">\n                            <thead>\n                                <tr>\n                                    <th className=\"md:w-48 px-8 py-4 border-b border-gray-200 bg-gray-50 text-left text-sm leading-4 font-medium text-gray-500 uppercase tracking-wider\">\n                                        Category\n                      </th>\n                                    <th className=\"md:w-48 px-8 py-4 border-b border-gray-200 bg-gray-50 text-left text-sm leading-4 font-medium text-gray-500 uppercase tracking-wider\">\n                                        Percentage\n                      </th>\n                                    <th className=\"md:w-48 px-8 py-4 border-b border-gray-200 bg-gray-50 text-left text-sm leading-4 font-medium text-gray-500 uppercase tracking-wider\">\n                                        Monthly\n                      </th>\n                                    <th className=\"md:w-48 px-8 py-4 border-b border-gray-200 bg-gray-50 text-left text-sm leading-4 font-medium text-gray-500 uppercase tracking-wider\">\n                                        Annually\n                      </th>\n                                    <th className=\"md:w-48 px-8 py-4 border-b border-gray-200 bg-gray-50 text-left text-sm leading-4 font-medium text-gray-500 uppercase tracking-wider\">\n                                        Category\n                      </th>\n                                </tr>\n                            </thead>\n                            <tbody className=\"bg-white align-middle\">{tableRows}</tbody>\n                        </table>\n                        <button\n                            className=\"bg-blue-500 hover:bg-blue-700 text-white font-bold py-2 px-4 m-4 rounded\"\n                            onClick={e => {\n                                addIncomeHandler(enteredIncome, e)\n                                addBudgetHandler(budgets)\n                            }\n                            }>Save as budget</button>\n                    </div>\n                </div>\n\n            </div>\n\n        </>\n    );\n};\n\nexport default Planner;"]},"metadata":{},"sourceType":"module"}