{"ast":null,"code":"var _jsxFileName = \"/Users/robo/budget-app/src/containers/Dashboard/Dashboard.js\";\nimport React, { useState, useRef, useEffect } from \"react\";\nimport Database from \"firebase/database\";\nimport MonthSpendCard from '../../components/MonthSpendCard.js/MonthSpendCard';\nimport SpendInputRow from '../../components/SpendInputRow/SpendInputRow';\n\nconst Dashboard = () => {\n  const inputRef = useRef();\n  const [budget, setBudget] = useState(0);\n  const [enteredMonth, setEnteredMonth] = useState(null);\n  const [enteredSpendRent, setEnteredSpendRent] = useState(null);\n  const [enteredSpendGroceries, setEnteredSpendGroceries] = useState(null);\n  const [enteredSpendTransport, setEnteredSpendTransport] = useState(null);\n  const [enteredSpendEntertainment, setEnteredSpendEntertainment] = useState(null);\n  const [savedMonthSpend, setSavedMonthSpend] = useState([{\n    \"-MK5w46zDwWYIdDPjXWc\": {\n      category: {\n        entertainment: 0,\n        groceries: 0,\n        rent: 0,\n        transport: 0\n      },\n      month: \"None\"\n    }\n  }]); //Fetch data from DB \n\n  useEffect(() => {\n    \"Fetching firebase to GET spending...\";\n    fetch(`https://budget-app-c0755.firebaseio.com/spend.json`).then(reponse => reponse.json()).then(responseJson => Database.orderByChild(\"month\")).then(responseData => {\n      const loadedSpend = [];\n\n      for (const key in responseData) {\n        loadedSpend.push({\n          [key]: {\n            category: responseData[key].category,\n            month: responseData[key].month\n          }\n        });\n      }\n\n      setSavedMonthSpend(loadedSpend);\n    });\n  }, []); //Fetch data from DB \n\n  useEffect(() => {\n    \"Fetching firebase to GET budgets...\";\n    fetch(`https://budget-app-c0755.firebaseio.com/budgets.json`).then(reponse => reponse.json()).then(responseData => {\n      const budgetData = responseData;\n      setBudget(budgetData);\n    });\n  }, []); //Spend inputs\n\n  const spendInput = {\n    month: enteredMonth,\n    category: {\n      rent: enteredSpendRent,\n      groceries: enteredSpendGroceries,\n      transport: enteredSpendTransport,\n      entertainment: enteredSpendEntertainment\n    }\n  };\n\n  const enteredSpendHandler = (input, cat) => {\n    switch (cat) {\n      case 'rent':\n        setEnteredSpendRent(input);\n        break;\n\n      case 'groceries':\n        setEnteredSpendGroceries(input);\n        break;\n\n      case 'transport':\n        setEnteredSpendTransport(input);\n        break;\n\n      case 'entertainment':\n        setEnteredSpendEntertainment(input);\n        break;\n\n      default:\n        console.error('ERROR: NO CATEGORIES MATCHED');\n    }\n  }; // Budgets (to be replaced by DB inputs from Planner page)\n\n\n  const dbObject = {\n    budgets: {\n      category: {\n        rent: {\n          name: \"Rent\",\n          percentage: 30,\n          monthly: 700,\n          annual: 1000,\n          category: \"Essential\"\n        },\n        groceries: {\n          name: \"Groceries\",\n          percentage: 8,\n          monthly: 150,\n          annual: 1000,\n          category: \"Essential\"\n        },\n        transport: {\n          name: \"Transport\",\n          percentage: 4,\n          monthly: 90,\n          annual: 1000,\n          category: \"Essential\"\n        },\n        entertainment: {\n          name: \"Entertainment\",\n          percentage: 12,\n          monthly: 310,\n          annual: 1000,\n          category: \"Luxury\"\n        }\n      }\n    }\n  }; // Call Firebase DB\n\n  const addSpendHandler = spend => {\n    console.log(\"Fetching firebase to POST...\");\n    fetch(`https://budget-app-c0755.firebaseio.com/spend.json`, {\n      method: 'POST',\n      body: JSON.stringify(spend),\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    }).then(response => {\n      return response.json();\n    }).then(responseData => {\n      console.log(spend);\n      setSavedMonthSpend(prevInput => [...prevInput, {\n        \"localId\": { ...spend\n        }\n      }]);\n    });\n  };\n\n  const months = savedMonthSpend.map(row => {\n    const id = Object.keys(row)[0];\n    const data = row[id];\n    return /*#__PURE__*/React.createElement(MonthSpendCard, {\n      key: id,\n      spending: data,\n      month: data.month,\n      budget: budget,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 156,\n        columnNumber: 20\n      }\n    });\n  });\n  const inputRows = Object.keys(dbObject.budgets.category).map(catKey => {\n    return /*#__PURE__*/React.createElement(SpendInputRow, {\n      key: catKey,\n      cat: catKey,\n      enteredSpendHandler: enteredSpendHandler,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 165,\n        columnNumber: 16\n      }\n    });\n  });\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"table\", {\n    className: \"min-w-full max-w-full\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 174,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"thead\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 176,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"tr\", {\n    className: \"bg-white px-8 flex h-20 border-b border-gray-300\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 177,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"td\", {\n    className: \"font-bold text-2m block my-auto\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 178,\n      columnNumber: 25\n    }\n  }, \"Input spending\")), /*#__PURE__*/React.createElement(\"tr\", {\n    className: \"hover:bg-gray-100 transition-all ease-linear duration-200 cursor-pointer\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 180,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"td\", {\n    className: \"w-1/2 whitespace-no-wrap border-b border-gray-200\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 181,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    className: \"appearance-none bg-transparent border-none w-full text-gray-700 mr-3 py-1 px-2 leading-tight focus:outline-none\",\n    type: \"text\",\n    placeholder: \"Month\",\n    \"aria-label\": \"Month\",\n    ref: inputRef,\n    onChange: event => {\n      setEnteredMonth(event.target.value);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 182,\n      columnNumber: 29\n    }\n  }))), /*#__PURE__*/React.createElement(\"tr\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 194,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"th\", {\n    className: \"w-1/2 px-8 py-4 border-b border-gray-200 bg-gray-50 text-left text-sm leading-4 font-medium text-gray-500 uppercase tracking-wider\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 195,\n      columnNumber: 25\n    }\n  }, \"Category\"), /*#__PURE__*/React.createElement(\"th\", {\n    className: \"w-1/2 px-8 py-4 border-b border-gray-200 bg-gray-50 text-left text-sm leading-4 font-medium text-gray-500 uppercase tracking-wider\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 198,\n      columnNumber: 25\n    }\n  }, \"Spent\"))), /*#__PURE__*/React.createElement(\"tbody\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 203,\n      columnNumber: 17\n    }\n  }, inputRows)), /*#__PURE__*/React.createElement(\"button\", {\n    className: \"bg-blue-500 hover:bg-blue-700 text-white font-bold py-2 px-4 rounded\",\n    onClick: e => {\n      addSpendHandler(spendInput, e);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 209,\n      columnNumber: 13\n    }\n  }, \"Create\"), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"max-w-7xl mx-auto\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 215,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"flex flex-col\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 216,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"bg-white\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 217,\n      columnNumber: 21\n    }\n  }, months))));\n};\n\nexport default Dashboard;","map":{"version":3,"sources":["/Users/robo/budget-app/src/containers/Dashboard/Dashboard.js"],"names":["React","useState","useRef","useEffect","Database","MonthSpendCard","SpendInputRow","Dashboard","inputRef","budget","setBudget","enteredMonth","setEnteredMonth","enteredSpendRent","setEnteredSpendRent","enteredSpendGroceries","setEnteredSpendGroceries","enteredSpendTransport","setEnteredSpendTransport","enteredSpendEntertainment","setEnteredSpendEntertainment","savedMonthSpend","setSavedMonthSpend","category","entertainment","groceries","rent","transport","month","fetch","then","reponse","json","responseJson","orderByChild","responseData","loadedSpend","key","push","budgetData","spendInput","enteredSpendHandler","input","cat","console","error","dbObject","budgets","name","percentage","monthly","annual","addSpendHandler","spend","log","method","body","JSON","stringify","headers","response","prevInput","months","map","row","id","Object","keys","data","inputRows","catKey","event","target","value","e"],"mappings":"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","sourcesContent":["import React, { useState, useRef, useEffect } from \"react\";\nimport Database from \"firebase/database\"\nimport MonthSpendCard from '../../components/MonthSpendCard.js/MonthSpendCard'\nimport SpendInputRow from '../../components/SpendInputRow/SpendInputRow'\n\nconst Dashboard = () => {\n    const inputRef = useRef();\n    const [budget, setBudget] = useState(0);\n    const [enteredMonth, setEnteredMonth] = useState(null);\n    const [enteredSpendRent, setEnteredSpendRent] = useState(null);\n    const [enteredSpendGroceries, setEnteredSpendGroceries] = useState(null);\n    const [enteredSpendTransport, setEnteredSpendTransport] = useState(null);\n    const [enteredSpendEntertainment, setEnteredSpendEntertainment] = useState(null);\n    const [savedMonthSpend, setSavedMonthSpend] = useState([\n        {\n            \"-MK5w46zDwWYIdDPjXWc\": {\n                category: {\n                    entertainment: 0,\n                    groceries: 0,\n                    rent: 0,\n                    transport: 0\n                },\n                month: \"None\"\n            },\n        }]\n    );\n\n    //Fetch data from DB \n    useEffect(() => {\n        (\"Fetching firebase to GET spending...\")\n        fetch(`https://budget-app-c0755.firebaseio.com/spend.json`).then(reponse => reponse.json()\n        ).then(responseJson => Database.orderByChild(\"month\")).then(responseData => {\n            const loadedSpend = [];\n            for (const key in responseData) {\n                loadedSpend.push({\n                    [key]: {\n                        category: responseData[key].category,\n                        month: responseData[key].month,\n                    }\n                });\n            }\n            setSavedMonthSpend(loadedSpend)\n        })\n    }, []);\n\n    //Fetch data from DB \n    useEffect(() => {\n        (\"Fetching firebase to GET budgets...\")\n        fetch(`https://budget-app-c0755.firebaseio.com/budgets.json`).then(reponse => reponse.json()\n        ).then(responseData => {\n            const budgetData = responseData;\n            setBudget(budgetData)\n        })\n    }, []);\n\n\n    //Spend inputs\n    const spendInput = {\n        month: enteredMonth,\n        category: {\n            rent: enteredSpendRent,\n            groceries: enteredSpendGroceries,\n            transport: enteredSpendTransport,\n            entertainment: enteredSpendEntertainment\n        }\n    };\n\n\n    const enteredSpendHandler = (input, cat) => {\n        switch (cat) {\n            case 'rent':\n                setEnteredSpendRent(input)\n                break;\n            case 'groceries':\n                setEnteredSpendGroceries(input)\n                break;\n            case 'transport':\n                setEnteredSpendTransport(input)\n                break;\n            case 'entertainment':\n                setEnteredSpendEntertainment(input)\n                break;\n            default:\n                console.error('ERROR: NO CATEGORIES MATCHED')\n        }\n    };\n\n    // Budgets (to be replaced by DB inputs from Planner page)\n\n\n    const dbObject = {\n        budgets: {\n            category: {\n                rent: {\n                    name: \"Rent\",\n                    percentage: 30,\n                    monthly: 700,\n                    annual: 1000,\n                    category: \"Essential\"\n                },\n                groceries: {\n                    name: \"Groceries\",\n                    percentage: 8,\n                    monthly: 150,\n                    annual: 1000,\n                    category: \"Essential\"\n                },\n                transport: {\n                    name: \"Transport\",\n                    percentage: 4,\n                    monthly: 90,\n                    annual: 1000,\n                    category: \"Essential\"\n                },\n                entertainment: {\n                    name: \"Entertainment\",\n                    percentage: 12,\n                    monthly: 310,\n                    annual: 1000,\n                    category: \"Luxury\"\n                }\n            },\n        },\n    };\n\n    // Call Firebase DB\n\n    const addSpendHandler = spend => {\n        console.log(\"Fetching firebase to POST...\")\n        fetch(`https://budget-app-c0755.firebaseio.com/spend.json`, {\n            method: 'POST',\n            body: JSON.stringify(spend),\n            headers: { 'Content-Type': 'application/json' }\n        })\n            .then(response => {\n                return response.json();\n            })\n            .then(responseData => {\n                console.log(spend)\n                setSavedMonthSpend(prevInput => [\n                    ...prevInput,\n                    {\n                        \"localId\": {\n                            ...spend\n                        }\n                    }\n                ]);\n            })\n    };\n\n    const months =\n        savedMonthSpend.map(row => {\n            const id = Object.keys(row)[0];\n            const data = row[id];\n\n            return <MonthSpendCard\n                key={id}\n                spending={data}\n                month={data.month}\n                budget={budget}\n            />;\n        })\n\n    const inputRows = Object.keys(dbObject.budgets.category).map((catKey) => {\n        return <SpendInputRow\n            key={catKey}\n            cat={catKey}\n            enteredSpendHandler={enteredSpendHandler}\n        />;\n    });\n\n    return (\n        <>\n            <table className=\"min-w-full max-w-full\">\n\n                <thead>\n                    <tr className=\"bg-white px-8 flex h-20 border-b border-gray-300\">\n                        <td className=\"font-bold text-2m block my-auto\">Input spending</td>\n                    </tr>\n                    <tr className=\"hover:bg-gray-100 transition-all ease-linear duration-200 cursor-pointer\" >\n                        <td className=\"w-1/2 whitespace-no-wrap border-b border-gray-200\">\n                            <input className=\"appearance-none bg-transparent border-none w-full text-gray-700 mr-3 py-1 px-2 leading-tight focus:outline-none\"\n                                type=\"text\"\n                                placeholder=\"Month\"\n                                aria-label=\"Month\"\n                                ref={inputRef}\n                                onChange={event => {\n                                    setEnteredMonth(event.target.value)\n                                }}\n                            >\n                            </input>\n                        </td>\n                    </tr>\n                    <tr>\n                        <th className=\"w-1/2 px-8 py-4 border-b border-gray-200 bg-gray-50 text-left text-sm leading-4 font-medium text-gray-500 uppercase tracking-wider\">\n                            Category\n      </th>\n                        <th className=\"w-1/2 px-8 py-4 border-b border-gray-200 bg-gray-50 text-left text-sm leading-4 font-medium text-gray-500 uppercase tracking-wider\">\n                            Spent\n      </th>\n                    </tr>\n                </thead>\n                <tbody>\n                    {inputRows}\n\n                </tbody>\n            </table>\n\n            <button\n                className=\"bg-blue-500 hover:bg-blue-700 text-white font-bold py-2 px-4 rounded\"\n                onClick={e => {\n                    addSpendHandler(spendInput, e)\n                }}>Create</button>\n\n            <div className=\"max-w-7xl mx-auto\">\n                <div className=\"flex flex-col\">\n                    <div className=\"bg-white\">{months}</div>\n                </div>\n            </div>\n        </>\n    );\n};\n\nexport default Dashboard;"]},"metadata":{},"sourceType":"module"}