{"ast":null,"code":"var _jsxFileName = \"/Users/robo/budget-app/src/containers/Dashboard/Dashboard.js\";\nimport React, { useState, useRef } from \"react\";\nimport MonthSpendCard from '../../components/MonthSpendCard.js/MonthSpendCard';\nimport SpendInputRow from '../../components/SpendInputRow/SpendInputRow';\n\nconst Dashboard = () => {\n  const inputRef = useRef();\n  const [enteredMonth, setEnteredMonth] = useState(null);\n  const [enteredSpendRent, setEnteredSpendRent] = useState(null);\n  const [enteredSpendGroceries, setEnteredSpendGroceries] = useState(null);\n  const [enteredSpendTransport, setEnteredSpendTransport] = useState(null);\n  const [enteredSpendEntertainment, setEnteredSpendEntertainment] = useState(null);\n  const spend = {\n    month: enteredMonth,\n    category: {\n      rent: enteredSpendRent,\n      groceries: enteredSpendGroceries,\n      transport: enteredSpendTransport,\n      entertainment: enteredSpendEntertainment\n    }\n  };\n\n  const enteredSpendHandler = (input, cat) => {\n    switch (cat) {\n      case 'rent':\n        setEnteredSpendRent(input);\n        break;\n\n      case 'groceries':\n        setEnteredSpendGroceries(input);\n        break;\n\n      case 'transport':\n        setEnteredSpendTransport(input);\n        break;\n\n      case 'entertainment':\n        setEnteredSpendEntertainment(input);\n        break;\n\n      default:\n        console.error('ERROR: NO CATEGORIES MATCHED');\n    }\n  };\n\n  const dbObject = {\n    budgets: {\n      category: {\n        rent: {\n          name: \"Rent\",\n          percentage: 30,\n          monthly: 700,\n          annual: 1000,\n          category: \"Essential\"\n        },\n        groceries: {\n          name: \"Groceries\",\n          percentage: 8,\n          monthly: 150,\n          annual: 1000,\n          category: \"Essential\"\n        },\n        transport: {\n          name: \"Transport\",\n          percentage: 4,\n          monthly: 90,\n          annual: 1000,\n          category: \"Essential\"\n        },\n        entertainment: {\n          name: \"Entertainment\",\n          percentage: 12,\n          monthly: 310,\n          annual: 1000,\n          category: \"Luxury\"\n        }\n      }\n    },\n    spending: {\n      month: {\n        june: {\n          rent: {\n            name: \"Rent\",\n            spent: 600,\n            category: \"Essential\"\n          },\n          groceries: {\n            name: \"Groceries\",\n            spent: 150,\n            category: \"Essential\"\n          },\n          transport: {\n            name: \"Transport\",\n            spent: 101,\n            category: \"Essential\"\n          },\n          entertainment: {\n            name: \"Entertainment\",\n            spent: 300,\n            category: \"Luxury\"\n          }\n        },\n        july: {\n          rent: {\n            name: \"Rent\",\n            spent: 78,\n            category: \"Essential\"\n          },\n          groceries: {\n            name: \"Groceries\",\n            spent: 733,\n            category: \"Essential\"\n          },\n          transport: {\n            name: \"Transport\",\n            spent: 765,\n            category: \"Essential\"\n          },\n          entertainment: {\n            name: \"Entertainment\",\n            percentage: 12,\n            spent: 765,\n            category: \"Luxury\"\n          }\n        },\n        august: {\n          rent: {\n            name: \"Rent\",\n            spent: 800,\n            category: \"Essential\"\n          },\n          groceries: {\n            name: \"Groceries\",\n            spent: 876,\n            category: \"Essential\"\n          },\n          transport: {\n            name: \"Transport\",\n            spent: 844,\n            category: \"Essential\"\n          },\n          entertainment: {\n            name: \"Entertainment\",\n            percentage: 12,\n            spent: 843,\n            category: \"Luxury\"\n          }\n        }\n      }\n    }\n  }; // Call Firebase DB\n\n  const addSpendHandler = spend => {\n    fetch('https://react-hooks-update-c4acc.firebaseio.com/spending.json', {\n      method: 'POST',\n      body: JSON.stringify(spend),\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    }).then(response => {\n      return response.json();\n    }).then(responseData => {\n      setEnteredSpendRent(prevIngredients => [...prevIngredients, {\n        id: responseData.name,\n        ...spend\n      }]);\n    });\n  };\n\n  const months = Object.keys(dbObject.spending.month).map(monthKey => {\n    return /*#__PURE__*/React.createElement(MonthSpendCard, {\n      key: monthKey,\n      spending: dbObject.spending.month[monthKey],\n      month: monthKey,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 175,\n        columnNumber: 16\n      }\n    });\n  }); //Loop through categories and produce row for each containing category name prefilld\n\n  const inputRows = Object.keys(dbObject.budgets.category).map(catKey => {\n    return /*#__PURE__*/React.createElement(SpendInputRow, {\n      key: catKey,\n      cat: catKey,\n      enteredSpendHandler: enteredSpendHandler,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 185,\n        columnNumber: 16\n      }\n    });\n  });\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"table\", {\n    className: \"min-w-full max-w-full\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 194,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"thead\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 196,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"tr\", {\n    className: \"bg-white px-8 flex h-20 border-b border-gray-300\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 197,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"td\", {\n    className: \"font-bold text-2m block my-auto\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 198,\n      columnNumber: 25\n    }\n  }, \"Input spending\")), /*#__PURE__*/React.createElement(\"tr\", {\n    className: \"hover:bg-gray-100 transition-all ease-linear duration-200 cursor-pointer\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 200,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"td\", {\n    className: \"w-1/2 whitespace-no-wrap border-b border-gray-200\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 201,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    className: \"appearance-none bg-transparent border-none w-full text-gray-700 mr-3 py-1 px-2 leading-tight focus:outline-none\",\n    type: \"text\",\n    placeholder: \"Month\",\n    \"aria-label\": \"Month\",\n    ref: inputRef,\n    onChange: event => {\n      setEnteredMonth(event.target.value);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 202,\n      columnNumber: 29\n    }\n  }))), /*#__PURE__*/React.createElement(\"tr\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 214,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"th\", {\n    className: \"w-1/2 px-8 py-4 border-b border-gray-200 bg-gray-50 text-left text-sm leading-4 font-medium text-gray-500 uppercase tracking-wider\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 215,\n      columnNumber: 25\n    }\n  }, \"Category\"), /*#__PURE__*/React.createElement(\"th\", {\n    className: \"w-1/2 px-8 py-4 border-b border-gray-200 bg-gray-50 text-left text-sm leading-4 font-medium text-gray-500 uppercase tracking-wider\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 218,\n      columnNumber: 25\n    }\n  }, \"Spent\"))), /*#__PURE__*/React.createElement(\"tbody\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 223,\n      columnNumber: 17\n    }\n  }, inputRows, /*#__PURE__*/React.createElement(\"button\", {\n    onClick: addSpendHandler(spend),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 225,\n      columnNumber: 21\n    }\n  }, \"Create\"))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"max-w-7xl mx-auto\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 229,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"flex flex-col\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 230,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"bg-white\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 231,\n      columnNumber: 21\n    }\n  }, months))));\n};\n\nexport default Dashboard;","map":{"version":3,"sources":["/Users/robo/budget-app/src/containers/Dashboard/Dashboard.js"],"names":["React","useState","useRef","MonthSpendCard","SpendInputRow","Dashboard","inputRef","enteredMonth","setEnteredMonth","enteredSpendRent","setEnteredSpendRent","enteredSpendGroceries","setEnteredSpendGroceries","enteredSpendTransport","setEnteredSpendTransport","enteredSpendEntertainment","setEnteredSpendEntertainment","spend","month","category","rent","groceries","transport","entertainment","enteredSpendHandler","input","cat","console","error","dbObject","budgets","name","percentage","monthly","annual","spending","june","spent","july","august","addSpendHandler","fetch","method","body","JSON","stringify","headers","then","response","json","responseData","prevIngredients","id","months","Object","keys","map","monthKey","inputRows","catKey","event","target","value"],"mappings":"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","sourcesContent":["import React, { useState, useRef } from \"react\";\nimport MonthSpendCard from '../../components/MonthSpendCard.js/MonthSpendCard'\nimport SpendInputRow from '../../components/SpendInputRow/SpendInputRow'\n\nconst Dashboard = () => {\n    const inputRef = useRef();\n    const [enteredMonth, setEnteredMonth] = useState(null);\n    const [enteredSpendRent, setEnteredSpendRent] = useState(null);\n    const [enteredSpendGroceries, setEnteredSpendGroceries] = useState(null);\n    const [enteredSpendTransport, setEnteredSpendTransport] = useState(null);\n    const [enteredSpendEntertainment, setEnteredSpendEntertainment] = useState(null);\n\n    const spend = {\n        month: enteredMonth,\n        category: {\n            rent: enteredSpendRent,\n            groceries: enteredSpendGroceries,\n            transport: enteredSpendTransport,\n            entertainment: enteredSpendEntertainment\n        }\n    };\n\n    const enteredSpendHandler = (input, cat) => {\n        switch (cat) {\n            case 'rent':\n                setEnteredSpendRent(input)\n                break;\n            case 'groceries':\n                setEnteredSpendGroceries(input)\n                break;\n            case 'transport':\n                setEnteredSpendTransport(input)\n                break;\n            case 'entertainment':\n                setEnteredSpendEntertainment(input)\n                break;\n            default:\n                console.error('ERROR: NO CATEGORIES MATCHED')\n        }\n    };\n\n    const dbObject = {\n        budgets: {\n            category: {\n                rent: {\n                    name: \"Rent\",\n                    percentage: 30,\n                    monthly: 700,\n                    annual: 1000,\n                    category: \"Essential\"\n                },\n                groceries: {\n                    name: \"Groceries\",\n                    percentage: 8,\n                    monthly: 150,\n                    annual: 1000,\n                    category: \"Essential\"\n                },\n                transport: {\n                    name: \"Transport\",\n                    percentage: 4,\n                    monthly: 90,\n                    annual: 1000,\n                    category: \"Essential\"\n                },\n                entertainment: {\n                    name: \"Entertainment\",\n                    percentage: 12,\n                    monthly: 310,\n                    annual: 1000,\n                    category: \"Luxury\"\n                }\n            },\n        },\n\n        spending: {\n            month: {\n                june: {\n                    rent: {\n                        name: \"Rent\",\n                        spent: 600,\n                        category: \"Essential\"\n                    },\n                    groceries: {\n                        name: \"Groceries\",\n                        spent: 150,\n                        category: \"Essential\"\n                    },\n                    transport: {\n                        name: \"Transport\",\n                        spent: 101,\n                        category: \"Essential\"\n                    },\n                    entertainment: {\n                        name: \"Entertainment\",\n\n                        spent: 300,\n                        category: \"Luxury\"\n                    },\n\n                },\n                july: {\n\n                    rent: {\n                        name: \"Rent\",\n                        spent: 78,\n                        category: \"Essential\"\n                    },\n                    groceries: {\n                        name: \"Groceries\",\n                        spent: 733,\n                        category: \"Essential\"\n                    },\n                    transport: {\n                        name: \"Transport\",\n                        spent: 765,\n                        category: \"Essential\"\n                    },\n                    entertainment: {\n                        name: \"Entertainment\",\n                        percentage: 12,\n                        spent: 765,\n                        category: \"Luxury\"\n                    },\n\n                },\n                august: {\n                    rent: {\n                        name: \"Rent\",\n                        spent: 800,\n                        category: \"Essential\"\n                    },\n                    groceries: {\n                        name: \"Groceries\",\n                        spent: 876,\n                        category: \"Essential\"\n                    },\n                    transport: {\n                        name: \"Transport\",\n                        spent: 844,\n                        category: \"Essential\"\n                    },\n                    entertainment: {\n                        name: \"Entertainment\",\n                        percentage: 12,\n                        spent: 843,\n                        category: \"Luxury\"\n                    },\n\n                },\n            },\n        },\n    }\n\n    // Call Firebase DB\n\n    const addSpendHandler = spend => {\n        fetch('https://react-hooks-update-c4acc.firebaseio.com/spending.json', {\n            method: 'POST',\n            body: JSON.stringify(spend),\n            headers: { 'Content-Type': 'application/json' }\n        })\n            .then(response => {\n                return response.json();\n            })\n            .then(responseData => {\n                setEnteredSpendRent(prevIngredients => [\n                    ...prevIngredients,\n                    { id: responseData.name, ...spend }\n                ]);\n            });\n    };\n\n    const months = Object.keys(dbObject.spending.month).map((monthKey) => {\n        return <MonthSpendCard\n            key={monthKey}\n            spending={dbObject.spending.month[monthKey]}\n            month={monthKey}\n        />;\n    });\n\n    //Loop through categories and produce row for each containing category name prefilld\n\n    const inputRows = Object.keys(dbObject.budgets.category).map((catKey) => {\n        return <SpendInputRow\n            key={catKey}\n            cat={catKey}\n            enteredSpendHandler={enteredSpendHandler}\n        />;\n    });\n\n    return (\n        <>\n            <table className=\"min-w-full max-w-full\">\n\n                <thead>\n                    <tr className=\"bg-white px-8 flex h-20 border-b border-gray-300\">\n                        <td className=\"font-bold text-2m block my-auto\">Input spending</td>\n                    </tr>\n                    <tr className=\"hover:bg-gray-100 transition-all ease-linear duration-200 cursor-pointer\" >\n                        <td className=\"w-1/2 whitespace-no-wrap border-b border-gray-200\">\n                            <input className=\"appearance-none bg-transparent border-none w-full text-gray-700 mr-3 py-1 px-2 leading-tight focus:outline-none\"\n                                type=\"text\"\n                                placeholder=\"Month\"\n                                aria-label=\"Month\"\n                                ref={inputRef}\n                                onChange={event => {\n                                    setEnteredMonth(event.target.value)\n                                }}\n                            >\n                            </input>\n                        </td>\n                    </tr>\n                    <tr>\n                        <th className=\"w-1/2 px-8 py-4 border-b border-gray-200 bg-gray-50 text-left text-sm leading-4 font-medium text-gray-500 uppercase tracking-wider\">\n                            Category\n      </th>\n                        <th className=\"w-1/2 px-8 py-4 border-b border-gray-200 bg-gray-50 text-left text-sm leading-4 font-medium text-gray-500 uppercase tracking-wider\">\n                            Spent\n      </th>\n                    </tr>\n                </thead>\n                <tbody>\n                    {inputRows}\n                    <button onClick={addSpendHandler(spend)}>Create</button>\n                </tbody>\n            </table>\n\n            <div className=\"max-w-7xl mx-auto\">\n                <div className=\"flex flex-col\">\n                    <div className=\"bg-white\">{months}</div>\n                </div>\n            </div>\n        </>\n    );\n};\n\nexport default Dashboard;"]},"metadata":{},"sourceType":"module"}