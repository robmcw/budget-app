{"ast":null,"code":"var _jsxFileName = \"/Users/robo/budget-app/src/containers/Dashboard/Dashboard.js\";\nimport React, { useState, useRef } from \"react\";\nimport MonthSpendCard from '../../components/MonthSpendCard.js/MonthSpendCard';\nimport SpendInputRow from '../../components/SpendInputRow/SpendInputRow';\n\nconst Dashboard = () => {\n  const inputRef = useRef();\n  const [enteredMonth, setEnteredMonth] = useState(null);\n  const [enteredSpendRent, setEnteredSpendRent] = useState(null);\n  const [enteredSpendGroceries, setEnteredSpendGroceries] = useState(null);\n  const [enteredSpendTransport, setEnteredSpendTransport] = useState(null);\n  const [enteredSpendEntertainment, setEnteredSpendEntertainment] = useState(null);\n  const [savedMonthSpend, setSavedMonthSpend] = useState([]);\n  console.log('SAVED MONTH SPEND');\n  console.log(savedMonthSpend);\n  const spendInput = {\n    month: enteredMonth,\n    category: {\n      rent: enteredSpendRent,\n      groceries: enteredSpendGroceries,\n      transport: enteredSpendTransport,\n      entertainment: enteredSpendEntertainment\n    }\n  };\n\n  const enteredSpendHandler = (input, cat) => {\n    switch (cat) {\n      case 'rent':\n        setEnteredSpendRent(input);\n        break;\n\n      case 'groceries':\n        setEnteredSpendGroceries(input);\n        break;\n\n      case 'transport':\n        setEnteredSpendTransport(input);\n        break;\n\n      case 'entertainment':\n        setEnteredSpendEntertainment(input);\n        break;\n\n      default:\n        console.error('ERROR: NO CATEGORIES MATCHED');\n    }\n  };\n\n  const dbObject2 = {\n    \"spend\": {\n      \"-MK5w46zDwWYIdDPjXWc\": {\n        \"category\": {\n          \"entertainment\": \"4\",\n          \"groceries\": \"2\",\n          \"rent\": \"1\",\n          \"transport\": \"3\"\n        },\n        \"month\": \"January\"\n      },\n      \"-MK5w6gfa-K9xcjb5-ip\": {\n        \"category\": {\n          \"entertainment\": \"4\",\n          \"groceries\": \"2\",\n          \"rent\": \"1\",\n          \"transport\": \"3\"\n        },\n        \"month\": \"Feburary\"\n      },\n      \"-MK5w7X2JmHXBMlJuhcl\": {\n        \"category\": {\n          \"entertainment\": \"4\",\n          \"groceries\": \"2\",\n          \"rent\": \"1\",\n          \"transport\": \"3\"\n        },\n        \"month\": \"March\"\n      }\n    }\n  }; // dbObject.spend.${id}.month\n  // dbObject.spend.${id}.category.rent\n  // id = db.Object[id]\n\n  const dbObject = {\n    budgets: {\n      category: {\n        rent: {\n          name: \"Rent\",\n          percentage: 30,\n          monthly: 700,\n          annual: 1000,\n          category: \"Essential\"\n        },\n        groceries: {\n          name: \"Groceries\",\n          percentage: 8,\n          monthly: 150,\n          annual: 1000,\n          category: \"Essential\"\n        },\n        transport: {\n          name: \"Transport\",\n          percentage: 4,\n          monthly: 90,\n          annual: 1000,\n          category: \"Essential\"\n        },\n        entertainment: {\n          name: \"Entertainment\",\n          percentage: 12,\n          monthly: 310,\n          annual: 1000,\n          category: \"Luxury\"\n        }\n      }\n    }\n  }; //     spending: {\n  //         month: {\n  //             june: {\n  //                 rent: {\n  //                     name: \"Rent\",\n  //                     spent: 600,\n  //                     category: \"Essential\"\n  //                 },\n  //                 groceries: {\n  //                     name: \"Groceries\",\n  //                     spent: 150,\n  //                     category: \"Essential\"\n  //                 },\n  //                 transport: {\n  //                     name: \"Transport\",\n  //                     spent: 101,\n  //                     category: \"Essential\"\n  //                 },\n  //                 entertainment: {\n  //                     name: \"Entertainment\",\n  //                     spent: 300,\n  //                     category: \"Luxury\"\n  //                 },\n  //             },\n  //             july: {\n  //                 rent: {\n  //                     name: \"Rent\",\n  //                     spent: 78,\n  //                     category: \"Essential\"\n  //                 },\n  //                 groceries: {\n  //                     name: \"Groceries\",\n  //                     spent: 733,\n  //                     category: \"Essential\"\n  //                 },\n  //                 transport: {\n  //                     name: \"Transport\",\n  //                     spent: 765,\n  //                     category: \"Essential\"\n  //                 },\n  //                 entertainment: {\n  //                     name: \"Entertainment\",\n  //                     percentage: 12,\n  //                     spent: 765,\n  //                     category: \"Luxury\"\n  //                 },\n  //             },\n  //             august: {\n  //                 rent: {\n  //                     name: \"Rent\",\n  //                     spent: 800,\n  //                     category: \"Essential\"\n  //                 },\n  //                 groceries: {\n  //                     name: \"Groceries\",\n  //                     spent: 876,\n  //                     category: \"Essential\"\n  //                 },\n  //                 transport: {\n  //                     name: \"Transport\",\n  //                     spent: 844,\n  //                     category: \"Essential\"\n  //                 },\n  //                 entertainment: {\n  //                     name: \"Entertainment\",\n  //                     percentage: 12,\n  //                     spent: 843,\n  //                     category: \"Luxury\"\n  //                 },\n  //             },\n  //         },\n  //     },\n  // }\n  // Call Firebase DB\n\n  const addSpendHandler = spend => {\n    console.log(\"Fetching firebase...\");\n    fetch(`https://budget-app-c0755.firebaseio.com/spend.json`, {\n      method: 'POST',\n      body: JSON.stringify(spend),\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    }).then(response => {\n      return response.json();\n    }).then(responseData => {\n      setSavedMonthSpend(prevInput => [...prevInput, {\n        id: responseData.name,\n        ...spend\n      }]);\n    });\n  };\n\n  const months = Object.keys(dbObject2.spend).map(i => {\n    Object.keys(dbObject2.spend[i].month).map(monthKey => {\n      return /*#__PURE__*/React.createElement(MonthSpendCard, {\n        key: monthKey,\n        spending: dbObject.spending.month[monthKey],\n        month: monthKey,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 224,\n          columnNumber: 20\n        }\n      });\n    });\n  }); // dbObject.spend.${id}.month\n  // dbObject.spend.${id}.category.rent\n  // id = db.Object[id]\n  //Loop through categories and produce row for each containing category name prefilld\n\n  const inputRows = Object.keys(dbObject.budgets.category).map(catKey => {\n    return /*#__PURE__*/React.createElement(SpendInputRow, {\n      key: catKey,\n      cat: catKey,\n      enteredSpendHandler: enteredSpendHandler,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 241,\n        columnNumber: 16\n      }\n    });\n  });\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"table\", {\n    className: \"min-w-full max-w-full\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 250,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"thead\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 252,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"tr\", {\n    className: \"bg-white px-8 flex h-20 border-b border-gray-300\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 253,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"td\", {\n    className: \"font-bold text-2m block my-auto\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 254,\n      columnNumber: 25\n    }\n  }, \"Input spending\")), /*#__PURE__*/React.createElement(\"tr\", {\n    className: \"hover:bg-gray-100 transition-all ease-linear duration-200 cursor-pointer\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 256,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"td\", {\n    className: \"w-1/2 whitespace-no-wrap border-b border-gray-200\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 257,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    className: \"appearance-none bg-transparent border-none w-full text-gray-700 mr-3 py-1 px-2 leading-tight focus:outline-none\",\n    type: \"text\",\n    placeholder: \"Month\",\n    \"aria-label\": \"Month\",\n    ref: inputRef,\n    onChange: event => {\n      setEnteredMonth(event.target.value);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 258,\n      columnNumber: 29\n    }\n  }))), /*#__PURE__*/React.createElement(\"tr\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 270,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"th\", {\n    className: \"w-1/2 px-8 py-4 border-b border-gray-200 bg-gray-50 text-left text-sm leading-4 font-medium text-gray-500 uppercase tracking-wider\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 271,\n      columnNumber: 25\n    }\n  }, \"Category\"), /*#__PURE__*/React.createElement(\"th\", {\n    className: \"w-1/2 px-8 py-4 border-b border-gray-200 bg-gray-50 text-left text-sm leading-4 font-medium text-gray-500 uppercase tracking-wider\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 274,\n      columnNumber: 25\n    }\n  }, \"Spent\"))), /*#__PURE__*/React.createElement(\"tbody\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 279,\n      columnNumber: 17\n    }\n  }, inputRows)), /*#__PURE__*/React.createElement(\"button\", {\n    class: \"bg-blue-500 hover:bg-blue-700 text-white font-bold py-2 px-4 rounded\",\n    onClick: e => {\n      addSpendHandler(spendInput, e);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 285,\n      columnNumber: 13\n    }\n  }, \"Create\"), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"max-w-7xl mx-auto\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 291,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"flex flex-col\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 292,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"bg-white\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 293,\n      columnNumber: 21\n    }\n  }, months))));\n};\n\nexport default Dashboard;","map":{"version":3,"sources":["/Users/robo/budget-app/src/containers/Dashboard/Dashboard.js"],"names":["React","useState","useRef","MonthSpendCard","SpendInputRow","Dashboard","inputRef","enteredMonth","setEnteredMonth","enteredSpendRent","setEnteredSpendRent","enteredSpendGroceries","setEnteredSpendGroceries","enteredSpendTransport","setEnteredSpendTransport","enteredSpendEntertainment","setEnteredSpendEntertainment","savedMonthSpend","setSavedMonthSpend","console","log","spendInput","month","category","rent","groceries","transport","entertainment","enteredSpendHandler","input","cat","error","dbObject2","dbObject","budgets","name","percentage","monthly","annual","addSpendHandler","spend","fetch","method","body","JSON","stringify","headers","then","response","json","responseData","prevInput","id","months","Object","keys","map","i","monthKey","spending","inputRows","catKey","event","target","value","e"],"mappings":"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","sourcesContent":["import React, { useState, useRef } from \"react\";\nimport MonthSpendCard from '../../components/MonthSpendCard.js/MonthSpendCard'\nimport SpendInputRow from '../../components/SpendInputRow/SpendInputRow'\n\nconst Dashboard = () => {\n    const inputRef = useRef();\n    const [enteredMonth, setEnteredMonth] = useState(null);\n    const [enteredSpendRent, setEnteredSpendRent] = useState(null);\n    const [enteredSpendGroceries, setEnteredSpendGroceries] = useState(null);\n    const [enteredSpendTransport, setEnteredSpendTransport] = useState(null);\n    const [enteredSpendEntertainment, setEnteredSpendEntertainment] = useState(null);\n    const [savedMonthSpend, setSavedMonthSpend] = useState([]);\n\n    console.log('SAVED MONTH SPEND')\n    console.log(savedMonthSpend)\n\n\n    const spendInput = {\n        month: enteredMonth,\n        category: {\n            rent: enteredSpendRent,\n            groceries: enteredSpendGroceries,\n            transport: enteredSpendTransport,\n            entertainment: enteredSpendEntertainment\n        }\n    };\n\n    const enteredSpendHandler = (input, cat) => {\n        switch (cat) {\n            case 'rent':\n                setEnteredSpendRent(input)\n                break;\n            case 'groceries':\n                setEnteredSpendGroceries(input)\n                break;\n            case 'transport':\n                setEnteredSpendTransport(input)\n                break;\n            case 'entertainment':\n                setEnteredSpendEntertainment(input)\n                break;\n            default:\n                console.error('ERROR: NO CATEGORIES MATCHED')\n        }\n    };\n\n    const dbObject2 = {\n        \"spend\": {\n            \"-MK5w46zDwWYIdDPjXWc\": {\n                \"category\": {\n                    \"entertainment\": \"4\",\n                    \"groceries\": \"2\",\n                    \"rent\": \"1\",\n                    \"transport\": \"3\"\n                },\n                \"month\": \"January\"\n            },\n            \"-MK5w6gfa-K9xcjb5-ip\": {\n                \"category\": {\n                    \"entertainment\": \"4\",\n                    \"groceries\": \"2\",\n                    \"rent\": \"1\",\n                    \"transport\": \"3\"\n                },\n                \"month\": \"Feburary\"\n            },\n            \"-MK5w7X2JmHXBMlJuhcl\": {\n                \"category\": {\n                    \"entertainment\": \"4\",\n                    \"groceries\": \"2\",\n                    \"rent\": \"1\",\n                    \"transport\": \"3\"\n                },\n                \"month\": \"March\"\n            }\n        }\n    }\n\n    // dbObject.spend.${id}.month\n\n    // dbObject.spend.${id}.category.rent\n\n    // id = db.Object[id]\n\n\n\n    const dbObject = {\n        budgets: {\n            category: {\n                rent: {\n                    name: \"Rent\",\n                    percentage: 30,\n                    monthly: 700,\n                    annual: 1000,\n                    category: \"Essential\"\n                },\n                groceries: {\n                    name: \"Groceries\",\n                    percentage: 8,\n                    monthly: 150,\n                    annual: 1000,\n                    category: \"Essential\"\n                },\n                transport: {\n                    name: \"Transport\",\n                    percentage: 4,\n                    monthly: 90,\n                    annual: 1000,\n                    category: \"Essential\"\n                },\n                entertainment: {\n                    name: \"Entertainment\",\n                    percentage: 12,\n                    monthly: 310,\n                    annual: 1000,\n                    category: \"Luxury\"\n                }\n            },\n        },\n    };\n\n    //     spending: {\n    //         month: {\n    //             june: {\n    //                 rent: {\n    //                     name: \"Rent\",\n    //                     spent: 600,\n    //                     category: \"Essential\"\n    //                 },\n    //                 groceries: {\n    //                     name: \"Groceries\",\n    //                     spent: 150,\n    //                     category: \"Essential\"\n    //                 },\n    //                 transport: {\n    //                     name: \"Transport\",\n    //                     spent: 101,\n    //                     category: \"Essential\"\n    //                 },\n    //                 entertainment: {\n    //                     name: \"Entertainment\",\n\n    //                     spent: 300,\n    //                     category: \"Luxury\"\n    //                 },\n\n    //             },\n    //             july: {\n\n    //                 rent: {\n    //                     name: \"Rent\",\n    //                     spent: 78,\n    //                     category: \"Essential\"\n    //                 },\n    //                 groceries: {\n    //                     name: \"Groceries\",\n    //                     spent: 733,\n    //                     category: \"Essential\"\n    //                 },\n    //                 transport: {\n    //                     name: \"Transport\",\n    //                     spent: 765,\n    //                     category: \"Essential\"\n    //                 },\n    //                 entertainment: {\n    //                     name: \"Entertainment\",\n    //                     percentage: 12,\n    //                     spent: 765,\n    //                     category: \"Luxury\"\n    //                 },\n\n    //             },\n    //             august: {\n    //                 rent: {\n    //                     name: \"Rent\",\n    //                     spent: 800,\n    //                     category: \"Essential\"\n    //                 },\n    //                 groceries: {\n    //                     name: \"Groceries\",\n    //                     spent: 876,\n    //                     category: \"Essential\"\n    //                 },\n    //                 transport: {\n    //                     name: \"Transport\",\n    //                     spent: 844,\n    //                     category: \"Essential\"\n    //                 },\n    //                 entertainment: {\n    //                     name: \"Entertainment\",\n    //                     percentage: 12,\n    //                     spent: 843,\n    //                     category: \"Luxury\"\n    //                 },\n\n    //             },\n    //         },\n    //     },\n    // }\n\n    // Call Firebase DB\n\n    const addSpendHandler = spend => {\n        console.log(\"Fetching firebase...\")\n        fetch(`https://budget-app-c0755.firebaseio.com/spend.json`, {\n            method: 'POST',\n            body: JSON.stringify(spend),\n            headers: { 'Content-Type': 'application/json' }\n        })\n            .then(response => {\n                return response.json();\n            })\n            .then(responseData => {\n                setSavedMonthSpend(prevInput => [\n                    ...prevInput,\n                    { id: responseData.name, ...spend }\n                ]);\n            })\n    };\n\n\n    const months = (Object.keys(dbObject2.spend).map((i) => {\n        Object.keys(dbObject2.spend[i].month).map((monthKey) => {\n            return <MonthSpendCard\n                key={monthKey}\n                spending={dbObject.spending.month[monthKey]}\n                month={monthKey}\n            />;\n        });\n    }));\n\n    // dbObject.spend.${id}.month\n\n    // dbObject.spend.${id}.category.rent\n\n    // id = db.Object[id]\n\n    //Loop through categories and produce row for each containing category name prefilld\n\n    const inputRows = Object.keys(dbObject.budgets.category).map((catKey) => {\n        return <SpendInputRow\n            key={catKey}\n            cat={catKey}\n            enteredSpendHandler={enteredSpendHandler}\n        />;\n    });\n\n    return (\n        <>\n            <table className=\"min-w-full max-w-full\">\n\n                <thead>\n                    <tr className=\"bg-white px-8 flex h-20 border-b border-gray-300\">\n                        <td className=\"font-bold text-2m block my-auto\">Input spending</td>\n                    </tr>\n                    <tr className=\"hover:bg-gray-100 transition-all ease-linear duration-200 cursor-pointer\" >\n                        <td className=\"w-1/2 whitespace-no-wrap border-b border-gray-200\">\n                            <input className=\"appearance-none bg-transparent border-none w-full text-gray-700 mr-3 py-1 px-2 leading-tight focus:outline-none\"\n                                type=\"text\"\n                                placeholder=\"Month\"\n                                aria-label=\"Month\"\n                                ref={inputRef}\n                                onChange={event => {\n                                    setEnteredMonth(event.target.value)\n                                }}\n                            >\n                            </input>\n                        </td>\n                    </tr>\n                    <tr>\n                        <th className=\"w-1/2 px-8 py-4 border-b border-gray-200 bg-gray-50 text-left text-sm leading-4 font-medium text-gray-500 uppercase tracking-wider\">\n                            Category\n      </th>\n                        <th className=\"w-1/2 px-8 py-4 border-b border-gray-200 bg-gray-50 text-left text-sm leading-4 font-medium text-gray-500 uppercase tracking-wider\">\n                            Spent\n      </th>\n                    </tr>\n                </thead>\n                <tbody>\n                    {inputRows}\n\n                </tbody>\n            </table>\n\n            <button\n                class=\"bg-blue-500 hover:bg-blue-700 text-white font-bold py-2 px-4 rounded\"\n                onClick={e => {\n                    addSpendHandler(spendInput, e)\n                }}>Create</button>\n\n            <div className=\"max-w-7xl mx-auto\">\n                <div className=\"flex flex-col\">\n                    <div className=\"bg-white\">{months}</div>\n                </div>\n            </div>\n        </>\n    );\n};\n\nexport default Dashboard;"]},"metadata":{},"sourceType":"module"}