{"ast":null,"code":"var _jsxFileName = \"/Users/robo/budget-app/src/containers/Dashboard/Dashboard.js\";\nimport React, { useState, useRef } from \"react\";\nimport MonthSpendCard from '../../components/MonthSpendCard.js/MonthSpendCard';\nimport SpendInput from '../../components/SpendInput/SpendInput'; // Static design. Multiple tables \n\nconst Dashboard = () => {\n  const inputRef = useRef();\n  const [enteredCategory, setEnteredCategory] = useState(null);\n  const [enteredSpent, setEnteredSpent] = useState(null);\n  const [enteredMonth, setEnteredMonth] = useState(null);\n  const input = {\n    month: enteredMonth,\n    category: enteredCategory,\n    spent: enteredSpent\n  };\n  console.log(input.month);\n  console.log(input.category);\n  console.log(input.spent);\n  const dbObject = {\n    budgets: {\n      category: {\n        rent: {\n          name: \"Rent\",\n          percentage: 30,\n          monthly: 700,\n          annual: 1000,\n          category: \"Essential\"\n        },\n        groceries: {\n          name: \"Groceries\",\n          percentage: 8,\n          monthly: 150,\n          annual: 1000,\n          category: \"Essential\"\n        },\n        transport: {\n          name: \"Transport\",\n          percentage: 4,\n          monthly: 90,\n          annual: 1000,\n          category: \"Essential\"\n        },\n        entertainment: {\n          name: \"Entertainment\",\n          percentage: 12,\n          monthly: 310,\n          annual: 1000,\n          category: \"Luxury\"\n        }\n      }\n    },\n    spending: {\n      month: {\n        june: {\n          rent: {\n            name: \"Rent\",\n            spent: 600,\n            category: \"Essential\"\n          },\n          groceries: {\n            name: \"Groceries\",\n            spent: 150,\n            category: \"Essential\"\n          },\n          transport: {\n            name: \"Transport\",\n            spent: 101,\n            category: \"Essential\"\n          },\n          entertainment: {\n            name: \"Entertainment\",\n            spent: 300,\n            category: \"Luxury\"\n          }\n        },\n        july: {\n          rent: {\n            name: \"Rent\",\n            spent: 78,\n            category: \"Essential\"\n          },\n          groceries: {\n            name: \"Groceries\",\n            spent: 733,\n            category: \"Essential\"\n          },\n          transport: {\n            name: \"Transport\",\n            spent: 765,\n            category: \"Essential\"\n          },\n          entertainment: {\n            name: \"Entertainment\",\n            percentage: 12,\n            spent: 765,\n            category: \"Luxury\"\n          }\n        },\n        august: {\n          rent: {\n            name: \"Rent\",\n            spent: 800,\n            category: \"Essential\"\n          },\n          groceries: {\n            name: \"Groceries\",\n            spent: 876,\n            category: \"Essential\"\n          },\n          transport: {\n            name: \"Transport\",\n            spent: 844,\n            category: \"Essential\"\n          },\n          entertainment: {\n            name: \"Entertainment\",\n            percentage: 12,\n            spent: 843,\n            category: \"Luxury\"\n          }\n        }\n      }\n    }\n  };\n  const months = Object.keys(dbObject.spending.month).map(monthKey => {\n    return /*#__PURE__*/React.createElement(MonthSpendCard, {\n      key: monthKey,\n      spending: dbObject.spending.month[monthKey],\n      month: monthKey,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 138,\n        columnNumber: 16\n      }\n    });\n  }); //Loop through categories and produce row for each containing category name prefilld\n\n  const inputRows = Object.keys(dbObject.budgets.category).map(catKey => {\n    return /*#__PURE__*/React.createElement(SpendInput, {\n      key: catKey,\n      cat: catKey,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 148,\n        columnNumber: 16\n      }\n    });\n  });\n  console.log(inputRows);\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"max-w-7xl mx-auto\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 158,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"flex flex-col\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 159,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"bg-white\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 160,\n      columnNumber: 21\n    }\n  }, months))));\n};\n\nexport default Dashboard;","map":{"version":3,"sources":["/Users/robo/budget-app/src/containers/Dashboard/Dashboard.js"],"names":["React","useState","useRef","MonthSpendCard","SpendInput","Dashboard","inputRef","enteredCategory","setEnteredCategory","enteredSpent","setEnteredSpent","enteredMonth","setEnteredMonth","input","month","category","spent","console","log","dbObject","budgets","rent","name","percentage","monthly","annual","groceries","transport","entertainment","spending","june","july","august","months","Object","keys","map","monthKey","inputRows","catKey"],"mappings":"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","sourcesContent":["import React, { useState, useRef } from \"react\";\nimport MonthSpendCard from '../../components/MonthSpendCard.js/MonthSpendCard'\nimport SpendInput from '../../components/SpendInput/SpendInput'\n\n// Static design. Multiple tables \n\nconst Dashboard = () => {\n    const inputRef = useRef();\n    const [enteredCategory, setEnteredCategory] = useState(null);\n    const [enteredSpent, setEnteredSpent] = useState(null);\n    const [enteredMonth, setEnteredMonth] = useState(null);\n\n    const input = {\n        month: enteredMonth,\n        category: enteredCategory,\n        spent: enteredSpent\n    }\n\n    console.log(input.month)\n    console.log(input.category)\n    console.log(input.spent)\n\n\n    const dbObject = {\n        budgets: {\n            category: {\n                rent: {\n                    name: \"Rent\",\n                    percentage: 30,\n                    monthly: 700,\n                    annual: 1000,\n                    category: \"Essential\"\n                },\n                groceries: {\n                    name: \"Groceries\",\n                    percentage: 8,\n                    monthly: 150,\n                    annual: 1000,\n                    category: \"Essential\"\n                },\n                transport: {\n                    name: \"Transport\",\n                    percentage: 4,\n                    monthly: 90,\n                    annual: 1000,\n                    category: \"Essential\"\n                },\n                entertainment: {\n                    name: \"Entertainment\",\n                    percentage: 12,\n                    monthly: 310,\n                    annual: 1000,\n                    category: \"Luxury\"\n                }\n            },\n        },\n\n        spending: {\n            month: {\n                june: {\n                    rent: {\n                        name: \"Rent\",\n                        spent: 600,\n                        category: \"Essential\"\n                    },\n                    groceries: {\n                        name: \"Groceries\",\n                        spent: 150,\n                        category: \"Essential\"\n                    },\n                    transport: {\n                        name: \"Transport\",\n                        spent: 101,\n                        category: \"Essential\"\n                    },\n                    entertainment: {\n                        name: \"Entertainment\",\n\n                        spent: 300,\n                        category: \"Luxury\"\n                    },\n\n                },\n                july: {\n\n                    rent: {\n                        name: \"Rent\",\n                        spent: 78,\n                        category: \"Essential\"\n                    },\n                    groceries: {\n                        name: \"Groceries\",\n                        spent: 733,\n                        category: \"Essential\"\n                    },\n                    transport: {\n                        name: \"Transport\",\n                        spent: 765,\n                        category: \"Essential\"\n                    },\n                    entertainment: {\n                        name: \"Entertainment\",\n                        percentage: 12,\n                        spent: 765,\n                        category: \"Luxury\"\n                    },\n\n                },\n                august: {\n                    rent: {\n                        name: \"Rent\",\n                        spent: 800,\n                        category: \"Essential\"\n                    },\n                    groceries: {\n                        name: \"Groceries\",\n                        spent: 876,\n                        category: \"Essential\"\n                    },\n                    transport: {\n                        name: \"Transport\",\n                        spent: 844,\n                        category: \"Essential\"\n                    },\n                    entertainment: {\n                        name: \"Entertainment\",\n                        percentage: 12,\n                        spent: 843,\n                        category: \"Luxury\"\n                    },\n\n                },\n            },\n        },\n    }\n\n    const months = Object.keys(dbObject.spending.month).map((monthKey) => {\n        return <MonthSpendCard\n            key={monthKey}\n            spending={dbObject.spending.month[monthKey]}\n            month={monthKey}\n        />;\n    });\n\n    //Loop through categories and produce row for each containing category name prefilld\n\n    const inputRows = Object.keys(dbObject.budgets.category).map((catKey) => {\n        return <SpendInput\n            key={catKey}\n            cat={catKey}\n        />;\n    });\n\n    console.log(inputRows)\n\n    return (\n        <>\n            <div className=\"max-w-7xl mx-auto\">\n                <div className=\"flex flex-col\">\n                    <div className=\"bg-white\">{months}</div>\n                </div>\n            </div>\n        </>\n    );\n};\n\nexport default Dashboard;"]},"metadata":{},"sourceType":"module"}