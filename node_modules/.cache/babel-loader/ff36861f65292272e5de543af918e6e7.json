{"ast":null,"code":"var _jsxFileName = \"/Users/robo/budget-app/src/containers/Planner/Planner.js\";\nimport React, { useState } from \"react\";\nimport TableRow from \"../../components/TableRow/TableRow\"; //To Do: \n// Add timeout \n\nconst Dashboard = () => {\n  const [enteredIncome, setEnteredIncome] = useState(null);\n  const [monthlyRent, SetMonthlyRent] = useState(0);\n  const [annualRent, SetAnnualRent] = useState(0);\n  const [monthlyGroceries, SetMonthlyGroceries] = useState(0);\n  const [annualGroceries, SetAnnualGroceries] = useState(0);\n  const [monthlyTransport, SetMonthlyTransport] = useState(0);\n  const [annualTransport, SetAnnualTransport] = useState(0);\n  const [monthlyEntertainment, SetMonthlyEntertainment] = useState(0);\n  const [annualEntertainment, SetAnnualEntertainment] = useState(0);\n  const budgets = {\n    category: {\n      rent: {\n        name: \"Rent\",\n        percentage: 30,\n        monthly: monthlyRent,\n        annual: annualRent,\n        category: \"Essential\"\n      },\n      groceries: {\n        name: \"Groceries\",\n        percentage: 8,\n        monthly: monthlyGroceries,\n        annual: annualGroceries,\n        category: \"Essential\"\n      },\n      transport: {\n        name: \"Transport\",\n        percentage: 4,\n        monthly: monthlyTransport,\n        annual: annualTransport,\n        category: \"Essential\"\n      },\n      entertainment: {\n        name: \"Entertainment\",\n        percentage: 12,\n        monthly: monthlyEntertainment,\n        annual: annualEntertainment,\n        category: \"Luxury\"\n      }\n    }\n  };\n  const tableRows = Object.keys(budgets.category).map(catKey => {\n    return /*#__PURE__*/React.createElement(TableRow, {\n      key: catKey,\n      budget: budgets.category[catKey],\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 16\n      }\n    });\n  });\n\n  const incomeHandler = (income, budgets) => {\n    Object.keys(budgets.category).map(catKey => {\n      const newAnnual = Math.round(income / 100 * budgets.category[catKey].percentage);\n      const newMonthly = Math.round(newAnnual / 12);\n\n      switch (budgets.category[catKey].name) {\n        case 'Rent':\n          SetMonthlyRent(newMonthly);\n          SetAnnualRent(newAnnual);\n          break;\n\n        case 'Groceries':\n          SetMonthlyGroceries(newMonthly);\n          SetAnnualGroceries(newAnnual);\n          break;\n\n        case 'Transport':\n          SetMonthlyTransport(newMonthly);\n          SetAnnualTransport(newAnnual);\n          break;\n\n        case 'Entertainment':\n          SetMonthlyEntertainment(newMonthly);\n          SetAnnualEntertainment(newAnnual);\n          break;\n\n        default:\n          return console.log('Error');\n      }\n    });\n  };\n\n  const timer = inputValue => {\n    setTimeout(() => {\n      if (enteredIncome === inputValue) {\n        incomeHandler(parseInt(inputValue), budgets);\n      }\n\n      ;\n    }, 500);\n  };\n\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"bg-white px-8 flex h-20 border-b border-gray-300\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"h2\", {\n    className: \"font-bold text-2xl block my-auto\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 17\n    }\n  }, \"Budget planner\")), /*#__PURE__*/React.createElement(\"form\", {\n    className: \"w-full max-w-sm\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"flex items-center border-b border-teal-500 py-2\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    className: \"appearance-none bg-transparent border-none w-full text-gray-700 mr-3 py-1 px-2 leading-tight focus:outline-none\",\n    type: \"text\",\n    placeholder: \"\\xA325,000\",\n    \"aria-label\": \"Income\",\n    value: enteredIncome,\n    onChange: event => {\n      setEnteredIncome(event.target.value);\n      timer(event.target.value || 0); // incomeHandler(parseInt(event.target.value || 0), budgets)\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 21\n    }\n  }))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"max-w-7xl mx-auto\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 127,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"flex flex-col\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 128,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"align-middle inline-block min-w-full bg-gray-100 border-b border-gray-200\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 129,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"table\", {\n    className: \"min-w-full max-w-full\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 130,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(\"thead\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 131,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(\"tr\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 132,\n      columnNumber: 33\n    }\n  }, /*#__PURE__*/React.createElement(\"th\", {\n    className: \"w-1/2 px-8 py-4 border-b border-gray-200 bg-gray-50 text-left text-sm leading-4 font-medium text-gray-500 uppercase tracking-wider\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 133,\n      columnNumber: 37\n    }\n  }, \"Category\"), /*#__PURE__*/React.createElement(\"th\", {\n    className: \"px-8 py-4 border-b border-gray-200 bg-gray-50 text-left text-sm leading-4 font-medium text-gray-500 uppercase tracking-wider\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 136,\n      columnNumber: 37\n    }\n  }, \"Percentage\"), /*#__PURE__*/React.createElement(\"th\", {\n    className: \"md:w-48 px-8 py-4 border-b border-gray-200 bg-gray-50 text-left text-sm leading-4 font-medium text-gray-500 uppercase tracking-wider\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 139,\n      columnNumber: 37\n    }\n  }, \"Monthly\"), /*#__PURE__*/React.createElement(\"th\", {\n    className: \"md:w-48 px-8 py-4 border-b border-gray-200 bg-gray-50 text-left text-sm leading-4 font-medium text-gray-500 uppercase tracking-wider\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 142,\n      columnNumber: 37\n    }\n  }, \"Annually\"), /*#__PURE__*/React.createElement(\"th\", {\n    className: \"md:w-48 px-8 py-4 border-b border-gray-200 bg-gray-50 text-left text-sm leading-4 font-medium text-gray-500 uppercase tracking-wider\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 145,\n      columnNumber: 37\n    }\n  }, \"Category\"))), /*#__PURE__*/React.createElement(\"tbody\", {\n    className: \"bg-white\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 150,\n      columnNumber: 29\n    }\n  }, tableRows))))));\n};\n\nexport default Dashboard;","map":{"version":3,"sources":["/Users/robo/budget-app/src/containers/Planner/Planner.js"],"names":["React","useState","TableRow","Dashboard","enteredIncome","setEnteredIncome","monthlyRent","SetMonthlyRent","annualRent","SetAnnualRent","monthlyGroceries","SetMonthlyGroceries","annualGroceries","SetAnnualGroceries","monthlyTransport","SetMonthlyTransport","annualTransport","SetAnnualTransport","monthlyEntertainment","SetMonthlyEntertainment","annualEntertainment","SetAnnualEntertainment","budgets","category","rent","name","percentage","monthly","annual","groceries","transport","entertainment","tableRows","Object","keys","map","catKey","incomeHandler","income","newAnnual","Math","round","newMonthly","console","log","timer","inputValue","setTimeout","parseInt","event","target","value"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\nimport TableRow from \"../../components/TableRow/TableRow\";\n\n//To Do: \n// Add timeout \n\n\n\nconst Dashboard = () => {\n\n\n    const [enteredIncome, setEnteredIncome] = useState(null);\n    const [monthlyRent, SetMonthlyRent] = useState(0);\n    const [annualRent, SetAnnualRent] = useState(0);\n    const [monthlyGroceries, SetMonthlyGroceries] = useState(0);\n    const [annualGroceries, SetAnnualGroceries] = useState(0);\n    const [monthlyTransport, SetMonthlyTransport] = useState(0);\n    const [annualTransport, SetAnnualTransport] = useState(0);\n    const [monthlyEntertainment, SetMonthlyEntertainment] = useState(0);\n    const [annualEntertainment, SetAnnualEntertainment] = useState(0);\n\n    const budgets = {\n        category: {\n            rent: {\n                name: \"Rent\",\n                percentage: 30,\n                monthly: monthlyRent,\n                annual: annualRent,\n                category: \"Essential\"\n            },\n            groceries: {\n                name: \"Groceries\",\n                percentage: 8,\n                monthly: monthlyGroceries,\n                annual: annualGroceries,\n                category: \"Essential\"\n            },\n            transport: {\n                name: \"Transport\",\n                percentage: 4,\n                monthly: monthlyTransport,\n                annual: annualTransport,\n                category: \"Essential\"\n            },\n            entertainment: {\n                name: \"Entertainment\",\n                percentage: 12,\n                monthly: monthlyEntertainment,\n                annual: annualEntertainment,\n                category: \"Luxury\"\n            }\n        },\n    };\n\n    const tableRows = Object.keys(budgets.category).map((catKey) => {\n        return <TableRow key={catKey} budget={budgets.category[catKey]} />;\n    });\n\n\n    const incomeHandler = (income, budgets) => {\n        Object.keys(budgets.category).map((catKey) => {\n            const newAnnual = Math.round((income / 100 * budgets.category[catKey].percentage));\n            const newMonthly = Math.round(newAnnual / 12);\n            switch (budgets.category[catKey].name) {\n                case 'Rent':\n                    SetMonthlyRent(newMonthly)\n                    SetAnnualRent(newAnnual)\n                    break;\n\n                case 'Groceries':\n                    SetMonthlyGroceries(newMonthly)\n                    SetAnnualGroceries(newAnnual)\n                    break;\n\n                case 'Transport':\n                    SetMonthlyTransport(newMonthly)\n                    SetAnnualTransport(newAnnual)\n                    break;\n\n                case 'Entertainment':\n                    SetMonthlyEntertainment(newMonthly)\n                    SetAnnualEntertainment(newAnnual)\n                    break;\n\n                default:\n                    return (console.log('Error'))\n            }\n        })\n    };\n\n\n    const timer = (inputValue) => {\n        setTimeout(() => {\n            if (enteredIncome === inputValue) {\n                incomeHandler(parseInt(inputValue), budgets)\n            };\n        }, 500);\n    }\n\n\n\n\n    return (\n        <>\n            <div className=\"bg-white px-8 flex h-20 border-b border-gray-300\">\n                <h2 className=\"font-bold text-2xl block my-auto\">Budget planner</h2>\n            </div>\n\n            <form className=\"w-full max-w-sm\" >\n                <div className=\"flex items-center border-b border-teal-500 py-2\">\n\n                    <input className=\"appearance-none bg-transparent border-none w-full text-gray-700 mr-3 py-1 px-2 leading-tight focus:outline-none\"\n                        type=\"text\"\n                        placeholder=\"£25,000\"\n                        aria-label=\"Income\"\n                        value={enteredIncome}\n                        onChange={event => {\n                            setEnteredIncome(event.target.value)\n                            timer(event.target.value || 0)\n                            // incomeHandler(parseInt(event.target.value || 0), budgets)\n                        }}\n                    >\n                    </input>\n                </div>\n            </form>\n\n            <div className=\"max-w-7xl mx-auto\">\n                <div className=\"flex flex-col\">\n                    <div className=\"align-middle inline-block min-w-full bg-gray-100 border-b border-gray-200\">\n                        <table className=\"min-w-full max-w-full\">\n                            <thead>\n                                <tr>\n                                    <th className=\"w-1/2 px-8 py-4 border-b border-gray-200 bg-gray-50 text-left text-sm leading-4 font-medium text-gray-500 uppercase tracking-wider\">\n                                        Category\n                      </th>\n                                    <th className=\"px-8 py-4 border-b border-gray-200 bg-gray-50 text-left text-sm leading-4 font-medium text-gray-500 uppercase tracking-wider\">\n                                        Percentage\n                      </th>\n                                    <th className=\"md:w-48 px-8 py-4 border-b border-gray-200 bg-gray-50 text-left text-sm leading-4 font-medium text-gray-500 uppercase tracking-wider\">\n                                        Monthly\n                      </th>\n                                    <th className=\"md:w-48 px-8 py-4 border-b border-gray-200 bg-gray-50 text-left text-sm leading-4 font-medium text-gray-500 uppercase tracking-wider\">\n                                        Annually\n                      </th>\n                                    <th className=\"md:w-48 px-8 py-4 border-b border-gray-200 bg-gray-50 text-left text-sm leading-4 font-medium text-gray-500 uppercase tracking-wider\">\n                                        Category\n                      </th>\n                                </tr>\n                            </thead>\n                            <tbody className=\"bg-white\">{tableRows}</tbody>\n                        </table>\n                    </div>\n                    {/* {loading && <Loading />}\n              {!loading && !projectRows[0] && (\n                <div className=\"text-gray-500 p-4 text-center\">\n                  No projects created\n                </div>\n              )} */}\n                </div>\n            </div>\n        </>\n    );\n};\n\nexport default Dashboard;"]},"metadata":{},"sourceType":"module"}